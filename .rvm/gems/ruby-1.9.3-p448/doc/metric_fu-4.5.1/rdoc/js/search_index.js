var search_data = {"index":{"searchIndex":["awesometemplate","metricfu","analysiserror","analyzertables","canegenerator","canegrapher","caneviolations","abccomplexity","comment","documentation","linestyle","others","churngenerator","churnhotspot","classmethodnode","cli","client","helper","microoptparse","parser","configuration","constantize","environment","flaygenerator","flaygrapher","flayhotspot","floggenerator","floggrapher","floghotspot","formatter","html","templates","yaml","gemrun","gemversion","generator","graph","grapher","grouping","hotspot","hotspotanalyzedproblems","hotspotanalyzer","hotspotgroupings","hotspotproblems","hotspotrankedproblemlocation","hotspotrankings","hotspotscoringstrategies","hotspotsgenerator","instancemethodnode","io","filesystem","linenumbers","loader","location","methodcontainer","metric","metriccane","metricchurn","metricflay","metricflog","metrichotspots","metricrailsbestpractices","metricrcov","metricreek","metricroodi","metricsaikuro","metricstats","railsbestpracticesgenerator","railsbestpracticesgrapher","ranking","rcovgenerator","line","rcovgrapher","rcovhotspot","record","reekgenerator","reekgrapher","reporter","result","roodigenerator","roodigrapher","roodihotspot","run","saikurogenerator","saikurohotspot","saikuroparsingelement","saikuroscratchfile","singletonmethodnode","statsgenerator","statsgrapher","statshotspot","table","template","utility","mfdebugger","logger","object","reekhotspot","<<()","<<()","<=>()","[]()","[]()","[]=()","activate()","activate()","activate()","activate()","activate()","activate()","activate()","activate()","activate()","activate()","activate()","add()","add()","add_method()","add_path()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyze()","analyzed_problems()","analyzer_for_metric()","analyzers()","artifact_dir()","artifact_dir()","artifact_dir=()","artifact_subdirs()","as_yaml()","assemble_files()","assert_sub_table_has_data()","average()","banner()","build_output_from_line_numbers()","calculate_score()","calculate_scores()","capture_output()","class_for()","class_location()","class_name()","clean_ascii_text()","column()","columns()","columns()","columns()","columns()","columns()","columns()","columns()","columns()","command()","command=()","complete!()","configuration()","configure()","configure_formatter()","configure_metric()","configure_metrics()","configure_template()","configured_run_options()","constantize()","convert_ruby_to_html()","create_artifact_subdirs()","create_directories()","create_dirs()","data()","data()","data()","data()","data()","data()","data()","data()","date()","debug()","debug_info()","default_artifact_dir()","default_command()","default_run_args()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","default_run_options()","dependencies()","dependencies_summary()","dir_for()","directories()","directory()","display_results()","display_results()","display_results()","each()","each()","each_singleton_method()","emit()","emit()","emit()","emit()","emit()","emit()","emit()","emit()","emit()","emit()","emit()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enable()","enabled_metrics()","environment_details()","eql?()","executable_name()","execute()","file_for()","file_globs_to_ignore()","file_location()","file_path()","filename()","filepath()","finalize()","finish()","finish()","finish()","finish_metric()","first_row()","for()","for()","for()","full_name()","full_name()","full_name()","gem_name()","gem_runtime_dependencies()","gemspec()","generate()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_records()","generate_result()","generators()","get()","get_class_names()","get_elements()","get_generator()","get_grapher()","get_grouping()","get_mean()","get_metric()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","get_metrics()","glob()","graph()","graph!()","graph_engine()","graphed_metrics()","graphers()","group_by()","group_by_metric()","handle_run_error()","handle_system_exit()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_graph?()","has_key?()","highest_score()","hotspots()","identity()","immediate_shutdown!()","in_method?()","included()","inherited()","inherited()","inherited()","inherited()","io_for()","is_cruise_control_rb?()","is_valid_text_file?()","jruby?()","length()","lib_dir()","lib_require()","library_details()","library_dirs()","line_numbers_from_file()","load_tasks()","load_user_configuration()","load_yaml()","loader()","location()","log()","map()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","map_strategy()","mapping_strategies()","massage_for_reek_12()","measure()","merge_classes()","method_at_line()","method_data_for_file_data()","method_location()","method_missing()","method_missing()","method_name()","method_to_attr()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric()","metric_config()","metric_directory()","metric_directory()","metric_manually_configured?()","metrics()","metrics()","mf_debug()","mf_debug()","mf_log()","mkdir_p()","mri?()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_dependency()","not_implemented()","not_implemented()","notify()","numeric_smell?()","open_in_browser?()","option()","option()","options()","osx?()","output_directory()","output_filename()","output_filename()","output_filename()","output_filename()","output_filename()","output_filename()","output_filename()","output_filename()","output_filename()","parse()","parse()","parse()","parse()","parse()","path_relative_to_base()","per_file_data()","per_file_info()","per_file_info()","per_file_info()","per_file_info()","per_file_info()","percentile()","percentile()","present_group()","present_group()","present_group()","present_group()","present_group()","present_group()","present_group()","present_group()","print_errors()","problems()","problems()","process!()","process_options()","rails?()","rails?()","reduce()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reduce_strategy()","reek_12?()","remove_excluded_files()","report_metrics()","reset()","reset()","reset_output_location()","result()","rm_rf()","root_dir()","round_to_tenths()","rubinius?()","ruby18?()","ruby192?()","ruby_details()","ruby_flavor()","ruby_strangely_makes_accessors_private?()","ruby_version()","run()","run()","run()","run()","run()","run()","run()","run!()","run_dir()","run_dir=()","run_external()","run_only()","run_options()","run_path()","save_graphs()","save_templatized_result()","score()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","score_strategy()","scratch_directory()","set_code_dirs()","set_directories()","setup()","show_in_browser()","shutdown()","shutdown()","size()","start()","start_line_for_method()","start_metric()","stringify_keys()","sum()","summary()","supports_ripper?()","table()","tables_for()","template_directory()","title()","title()","title()","title()","title()","title()","title()","title()","title()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_hash()","to_hash()","to_key()","tool_analyzers()","tool_tables()","top()","underscore()","unknown_dependency()","usage()","verbose()","verbose=()","version()","version()","worst_classes()","worst_files()","worst_items()","worst_methods()","write()","write_file_data()","write_output()","write_template()","mit-license"],"longSearchIndex":["awesometemplate","metricfu","metricfu::analysiserror","metricfu::analyzertables","metricfu::canegenerator","metricfu::canegrapher","metricfu::caneviolations","metricfu::caneviolations::abccomplexity","metricfu::caneviolations::comment","metricfu::caneviolations::documentation","metricfu::caneviolations::linestyle","metricfu::caneviolations::others","metricfu::churngenerator","metricfu::churnhotspot","metricfu::classmethodnode","metricfu::cli","metricfu::cli::client","metricfu::cli::helper","metricfu::cli::microoptparse","metricfu::cli::microoptparse::parser","metricfu::configuration","metricfu::constantize","metricfu::environment","metricfu::flaygenerator","metricfu::flaygrapher","metricfu::flayhotspot","metricfu::floggenerator","metricfu::floggrapher","metricfu::floghotspot","metricfu::formatter","metricfu::formatter::html","metricfu::formatter::templates","metricfu::formatter::yaml","metricfu::gemrun","metricfu::gemversion","metricfu::generator","metricfu::graph","metricfu::grapher","metricfu::grouping","metricfu::hotspot","metricfu::hotspotanalyzedproblems","metricfu::hotspotanalyzer","metricfu::hotspotgroupings","metricfu::hotspotproblems","metricfu::hotspotrankedproblemlocation","metricfu::hotspotrankings","metricfu::hotspotscoringstrategies","metricfu::hotspotsgenerator","metricfu::instancemethodnode","metricfu::io","metricfu::io::filesystem","metricfu::linenumbers","metricfu::loader","metricfu::location","metricfu::methodcontainer","metricfu::metric","metricfu::metriccane","metricfu::metricchurn","metricfu::metricflay","metricfu::metricflog","metricfu::metrichotspots","metricfu::metricrailsbestpractices","metricfu::metricrcov","metricfu::metricreek","metricfu::metricroodi","metricfu::metricsaikuro","metricfu::metricstats","metricfu::railsbestpracticesgenerator","metricfu::railsbestpracticesgrapher","metricfu::ranking","metricfu::rcovgenerator","metricfu::rcovgenerator::line","metricfu::rcovgrapher","metricfu::rcovhotspot","metricfu::record","metricfu::reekgenerator","metricfu::reekgrapher","metricfu::reporter","metricfu::result","metricfu::roodigenerator","metricfu::roodigrapher","metricfu::roodihotspot","metricfu::run","metricfu::saikurogenerator","metricfu::saikurohotspot","metricfu::saikuroparsingelement","metricfu::saikuroscratchfile","metricfu::singletonmethodnode","metricfu::statsgenerator","metricfu::statsgrapher","metricfu::statshotspot","metricfu::table","metricfu::template","metricfu::utility","mfdebugger","mfdebugger::logger","object","reekhotspot","metricfu::saikuroparsingelement#<<()","metricfu::table#<<()","metricfu::location#<=>()","metricfu::record#[]()","metricfu::table#[]()","metricfu::record#[]=()","metricfu::metric#activate()","metricfu::metriccane#activate()","metricfu::metricchurn#activate()","metricfu::metricflay#activate()","metricfu::metricflog#activate()","metricfu::metricrailsbestpractices#activate()","metricfu::metricrcov#activate()","metricfu::metricreek#activate()","metricfu::metricroodi#activate()","metricfu::metricsaikuro#activate()","metricfu::metricstats#activate()","metricfu::graph#add()","metricfu::result#add()","metricfu::methodcontainer#add_method()","metricfu::methodcontainer#add_path()","metricfu::canegenerator#analyze()","metricfu::churngenerator#analyze()","metricfu::flaygenerator#analyze()","metricfu::floggenerator#analyze()","metricfu::hotspotsgenerator#analyze()","metricfu::railsbestpracticesgenerator#analyze()","metricfu::rcovgenerator#analyze()","metricfu::reekgenerator#analyze()","metricfu::roodigenerator#analyze()","metricfu::saikurogenerator#analyze()","metricfu::statsgenerator#analyze()","metricfu::hotspotanalyzer#analyzed_problems()","metricfu::hotspot::analyzer_for_metric()","metricfu::hotspot::analyzers()","metricfu#artifact_dir()","metricfu::io::filesystem::artifact_dir()","metricfu::io::filesystem::artifact_dir=()","metricfu#artifact_subdirs()","metricfu::result#as_yaml()","metricfu::saikuroscratchfile::assemble_files()","metricfu::hotspotrankedproblemlocation#assert_sub_table_has_data()","metricfu::hotspotscoringstrategies#average()","metricfu::cli::helper#banner()","metricfu::saikurogenerator#build_output_from_line_numbers()","metricfu::churnhotspot#calculate_score()","metricfu::hotspotrankings#calculate_scores()","mfdebugger::logger::capture_output()","metricfu::formatter::class_for()","metricfu::hotspotrankedproblemlocation#class_location()","metricfu::hotspotrankedproblemlocation#class_name()","metricfu::utility#clean_ascii_text()","metricfu::table#column()","metricfu::churnhotspot#columns()","metricfu::flayhotspot#columns()","metricfu::floghotspot#columns()","metricfu::rcovhotspot#columns()","metricfu::roodihotspot#columns()","metricfu::saikurohotspot#columns()","metricfu::statshotspot#columns()","reekhotspot#columns()","metricfu::rcovgenerator#command()","metricfu::rcovgenerator#command=()","metricfu::cli::complete!()","metricfu::configuration()","metricfu::configure()","metricfu::configuration#configure_formatter()","metricfu::configuration#configure_metric()","metricfu::configuration#configure_metrics()","metricfu::formatter::templates#configure_template()","metricfu::metric#configured_run_options()","metricfu::constantize#constantize()","awesometemplate#convert_ruby_to_html()","metricfu#create_artifact_subdirs()","metricfu::io::filesystem#create_directories()","metricfu#create_dirs()","metricfu::canegrapher#data()","metricfu::flaygrapher#data()","metricfu::floggrapher#data()","metricfu::railsbestpracticesgrapher#data()","metricfu::rcovgrapher#data()","metricfu::reekgrapher#data()","metricfu::roodigrapher#data()","metricfu::statsgrapher#data()","metricfu::grapher#date()","mfdebugger::logger::debug()","metricfu::environment#debug_info()","metricfu::io::filesystem::default_artifact_dir()","metricfu::rcovgenerator#default_command()","metricfu::metric#default_run_args()","metricfu::metric#default_run_options()","metricfu::metriccane#default_run_options()","metricfu::metricchurn#default_run_options()","metricfu::metricflay#default_run_options()","metricfu::metricflog#default_run_options()","metricfu::metrichotspots#default_run_options()","metricfu::metricrailsbestpractices#default_run_options()","metricfu::metricrcov#default_run_options()","metricfu::metricreek#default_run_options()","metricfu::metricroodi#default_run_options()","metricfu::metricsaikuro#default_run_options()","metricfu::metricstats#default_run_options()","metricfu::gemversion::dependencies()","metricfu::gemversion::dependencies_summary()","metricfu::io#dir_for()","metricfu::io::filesystem#directories()","metricfu::io::filesystem#directory()","metricfu::formatter::html#display_results()","metricfu::reporter#display_results()","metricfu::run#display_results()","metricfu::grouping#each()","metricfu::table#each()","metricfu::singletonmethodnode#each_singleton_method()","metricfu::canegenerator#emit()","metricfu::churngenerator#emit()","metricfu::flaygenerator#emit()","metricfu::floggenerator#emit()","metricfu::hotspotsgenerator#emit()","metricfu::railsbestpracticesgenerator#emit()","metricfu::rcovgenerator#emit()","metricfu::reekgenerator#emit()","metricfu::roodigenerator#emit()","metricfu::saikurogenerator#emit()","metricfu::statsgenerator#emit()","metricfu::metric#enable()","metricfu::metriccane#enable()","metricfu::metricchurn#enable()","metricfu::metricflay#enable()","metricfu::metricflog#enable()","metricfu::metrichotspots#enable()","metricfu::metricrailsbestpractices#enable()","metricfu::metricrcov#enable()","metricfu::metricreek#enable()","metricfu::metricroodi#enable()","metricfu::metricsaikuro#enable()","metricfu::metricstats#enable()","metricfu::metric::enabled_metrics()","metricfu::environment#environment_details()","metricfu::location#eql?()","metricfu::cli::helper#executable_name()","metricfu::gemrun#execute()","metricfu::io#file_for()","metricfu::io::filesystem#file_globs_to_ignore()","metricfu::hotspotrankedproblemlocation#file_location()","metricfu::hotspotrankedproblemlocation#file_path()","metricfu::saikuroscratchfile#filename()","metricfu::saikuroscratchfile#filepath()","metricfu::location#finalize()","metricfu::formatter::html#finish()","metricfu::formatter::yaml#finish()","metricfu::reporter#finish()","metricfu::reporter#finish_metric()","metricfu::hotspotrankedproblemlocation#first_row()","metricfu::gemversion#for()","metricfu::gemversion::for()","metricfu::location::for()","metricfu::classmethodnode#full_name()","metricfu::instancemethodnode#full_name()","metricfu::singletonmethodnode#full_name()","metricfu::metric#gem_name()","metricfu::gemversion#gem_runtime_dependencies()","metricfu::gemversion#gemspec()","metricfu::graph#generate()","metricfu::analyzertables#generate_records()","metricfu::churnhotspot#generate_records()","metricfu::flayhotspot#generate_records()","metricfu::floghotspot#generate_records()","metricfu::hotspot#generate_records()","metricfu::rcovhotspot#generate_records()","metricfu::roodihotspot#generate_records()","metricfu::saikurohotspot#generate_records()","metricfu::statshotspot#generate_records()","reekhotspot#generate_records()","metricfu::generator#generate_result()","metricfu::generator::generators()","metricfu::location::get()","metricfu::saikuroscratchfile#get_class_names()","metricfu::saikuroscratchfile#get_elements()","metricfu::generator::get_generator()","metricfu::grapher::get_grapher()","metricfu::hotspotgroupings#get_grouping()","metricfu::hotspot#get_mean()","metricfu::metric::get_metric()","metricfu::canegrapher#get_metrics()","metricfu::flaygrapher#get_metrics()","metricfu::floggrapher#get_metrics()","metricfu::grapher#get_metrics()","metricfu::railsbestpracticesgrapher#get_metrics()","metricfu::rcovgrapher#get_metrics()","metricfu::reekgrapher#get_metrics()","metricfu::roodigrapher#get_metrics()","metricfu::statsgrapher#get_metrics()","metricfu::utility#glob()","metricfu::graph()","metricfu::grapher#graph!()","metricfu::configuration#graph_engine()","metricfu::configuration#graphed_metrics()","metricfu::grapher::graphers()","metricfu::hotspotproblems#group_by()","metricfu::table#group_by_metric()","metricfu::gemrun#handle_run_error()","metricfu::gemrun#handle_system_exit()","metricfu::metric#has_graph?()","metricfu::metriccane#has_graph?()","metricfu::metricchurn#has_graph?()","metricfu::metricflay#has_graph?()","metricfu::metricflog#has_graph?()","metricfu::metrichotspots#has_graph?()","metricfu::metricrailsbestpractices#has_graph?()","metricfu::metricrcov#has_graph?()","metricfu::metricreek#has_graph?()","metricfu::metricroodi#has_graph?()","metricfu::metricsaikuro#has_graph?()","metricfu::metricstats#has_graph?()","metricfu::record#has_key?()","metricfu::methodcontainer#highest_score()","metricfu::hotspotanalyzer#hotspots()","metricfu::hotspotscoringstrategies#identity()","metricfu::cli::immediate_shutdown!()","metricfu::linenumbers#in_method?()","metricfu::environment::included()","metricfu::generator::inherited()","metricfu::grapher::inherited()","metricfu::hotspot::inherited()","metricfu::metric::inherited()","metricfu::io#io_for()","metricfu::environment#is_cruise_control_rb?()","metricfu::saikuroscratchfile::is_valid_text_file?()","metricfu::environment#jruby?()","metricfu::table#length()","metricfu#lib_dir()","metricfu::loader#lib_require()","metricfu::environment#library_details()","metricfu#library_dirs()","metricfu::saikurogenerator#line_numbers_from_file()","metricfu#load_tasks()","metricfu#load_user_configuration()","metricfu::utility#load_yaml()","metricfu#loader()","metricfu::hotspotrankedproblemlocation#location()","mfdebugger::logger::log()","metricfu::hotspot#map()","metricfu::churnhotspot#map_strategy()","metricfu::flayhotspot#map_strategy()","metricfu::floghotspot#map_strategy()","metricfu::hotspot#map_strategy()","metricfu::rcovhotspot#map_strategy()","metricfu::roodihotspot#map_strategy()","metricfu::saikurohotspot#map_strategy()","metricfu::statshotspot#map_strategy()","reekhotspot#map_strategy()","metricfu::hotspot#mapping_strategies()","metricfu::reekgenerator#massage_for_reek_12()","metricfu::run#measure()","metricfu::saikuroscratchfile#merge_classes()","metricfu::linenumbers#method_at_line()","metricfu::saikurogenerator#method_data_for_file_data()","metricfu::hotspotrankedproblemlocation#method_location()","metricfu::metric#method_missing()","metricfu::record#method_missing()","metricfu::hotspotrankedproblemlocation#method_name()","metricfu::metric#method_to_attr()","metricfu::canegenerator::metric()","metricfu::canegrapher::metric()","metricfu::churngenerator::metric()","metricfu::flaygenerator::metric()","metricfu::flaygrapher::metric()","metricfu::floggenerator::metric()","metricfu::floggrapher::metric()","metricfu::generator::metric()","metricfu::generator#metric()","metricfu::hotspot::metric()","metricfu::hotspotsgenerator::metric()","metricfu::railsbestpracticesgenerator::metric()","metricfu::railsbestpracticesgrapher::metric()","metricfu::rcovgenerator::metric()","metricfu::rcovgrapher::metric()","metricfu::reekgenerator::metric()","metricfu::reekgrapher::metric()","metricfu::roodigenerator::metric()","metricfu::roodigrapher::metric()","metricfu::saikurogenerator::metric()","metricfu::statsgenerator::metric()","metricfu::statsgrapher::metric()","metricfu::generator#metric_config()","metricfu::generator#metric_directory()","metricfu::generator::metric_directory()","metricfu::configuration#metric_manually_configured?()","metricfu::cli::helper#metrics()","metricfu::metric::metrics()","metricfu::configuration#mf_debug()","mfdebugger#mf_debug()","mfdebugger#mf_log()","metricfu::utility#mkdir_p()","metricfu::environment#mri?()","metricfu::churnhotspot#name()","metricfu::classmethodnode#name()","metricfu::flayhotspot#name()","metricfu::floghotspot#name()","metricfu::metric#name()","metricfu::metriccane#name()","metricfu::metricchurn#name()","metricfu::metricflay#name()","metricfu::metricflog#name()","metricfu::metrichotspots#name()","metricfu::metricrailsbestpractices#name()","metricfu::metricrcov#name()","metricfu::metricreek#name()","metricfu::metricroodi#name()","metricfu::metricsaikuro#name()","metricfu::metricstats#name()","metricfu::rcovhotspot#name()","metricfu::roodihotspot#name()","metricfu::saikurohotspot#name()","metricfu::statshotspot#name()","reekhotspot#name()","metricfu::analyzertables::new()","metricfu::canegrapher::new()","metricfu::cli::client::new()","metricfu::cli::helper::new()","metricfu::cli::microoptparse::parser::new()","metricfu::flaygrapher::new()","metricfu::floggrapher::new()","metricfu::formatter::html::new()","metricfu::formatter::yaml::new()","metricfu::gemrun::new()","metricfu::gemversion::new()","metricfu::generator::new()","metricfu::graph::new()","metricfu::grapher::new()","metricfu::grouping::new()","metricfu::hotspotanalyzedproblems::new()","metricfu::hotspotanalyzer::new()","metricfu::hotspotgroupings::new()","metricfu::hotspotproblems::new()","metricfu::hotspotrankedproblemlocation::new()","metricfu::hotspotrankings::new()","metricfu::hotspotsgenerator::new()","metricfu::linenumbers::new()","metricfu::loader::new()","metricfu::location::new()","metricfu::methodcontainer::new()","metricfu::metric::new()","metricfu::railsbestpracticesgrapher::new()","metricfu::ranking::new()","metricfu::rcovgenerator::line::new()","metricfu::rcovgrapher::new()","metricfu::record::new()","metricfu::reekgrapher::new()","metricfu::reporter::new()","metricfu::roodigrapher::new()","metricfu::run::new()","metricfu::saikuroparsingelement::new()","metricfu::saikuroscratchfile::new()","metricfu::statsgrapher::new()","metricfu::table::new()","metricfu::gemversion#new_dependency()","metricfu::generator::not_implemented()","metricfu::hotspot#not_implemented()","metricfu::reporter#notify()","reekhotspot::numeric_smell?()","metricfu::formatter::html#open_in_browser?()","metricfu::cli::microoptparse::parser#option()","metricfu::formatter::templates#option()","metricfu::formatter::templates#options()","metricfu::environment#osx?()","metricfu::formatter::html#output_directory()","metricfu::canegrapher#output_filename()","metricfu::flaygrapher#output_filename()","metricfu::floggrapher#output_filename()","metricfu::grapher#output_filename()","metricfu::railsbestpracticesgrapher#output_filename()","metricfu::rcovgrapher#output_filename()","metricfu::reekgrapher#output_filename()","metricfu::roodigrapher#output_filename()","metricfu::statsgrapher#output_filename()","metricfu::caneviolations::abccomplexity::parse()","metricfu::caneviolations::comment::parse()","metricfu::caneviolations::documentation::parse()","metricfu::caneviolations::linestyle::parse()","metricfu::caneviolations::others::parse()","metricfu::io#path_relative_to_base()","metricfu::result#per_file_data()","metricfu::floggenerator#per_file_info()","metricfu::railsbestpracticesgenerator#per_file_info()","metricfu::reekgenerator#per_file_info()","metricfu::roodigenerator#per_file_info()","metricfu::saikurogenerator#per_file_info()","metricfu::hotspotscoringstrategies#percentile()","metricfu::ranking#percentile()","metricfu::churnhotspot#present_group()","metricfu::flayhotspot#present_group()","metricfu::floghotspot#present_group()","metricfu::hotspot#present_group()","metricfu::rcovhotspot#present_group()","metricfu::roodihotspot#present_group()","metricfu::saikurohotspot#present_group()","reekhotspot#present_group()","metricfu::gemrun#print_errors()","metricfu::hotspotproblems#problems()","metricfu::hotspotrankedproblemlocation#problems()","metricfu::cli::microoptparse::parser#process!()","metricfu::cli::helper#process_options()","metricfu::rails?()","metricfu::environment#rails?()","metricfu::hotspot#reduce()","metricfu::churnhotspot#reduce_strategy()","metricfu::flayhotspot#reduce_strategy()","metricfu::floghotspot#reduce_strategy()","metricfu::hotspot#reduce_strategy()","metricfu::rcovhotspot#reduce_strategy()","metricfu::roodihotspot#reduce_strategy()","metricfu::saikurohotspot#reduce_strategy()","metricfu::statshotspot#reduce_strategy()","reekhotspot#reduce_strategy()","metricfu::reekgenerator#reek_12?()","metricfu::generator#remove_excluded_files()","metricfu::run#report_metrics()","metricfu#reset()","metricfu::configuration#reset()","metricfu::rcovgenerator#reset_output_location()","metricfu::result()","metricfu::utility#rm_rf()","metricfu#root_dir()","metricfu::generator#round_to_tenths()","metricfu::environment#rubinius?()","metricfu::environment#ruby18?()","metricfu::environment#ruby192?()","metricfu::environment#ruby_details()","metricfu::environment#ruby_flavor()","metricfu::environment#ruby_strangely_makes_accessors_private?()","metricfu::environment#ruby_version()","metricfu#run()","metricfu::cli::client#run()","metricfu::cli::helper#run()","metricfu::configuration::run()","metricfu::gemrun#run()","metricfu::metric#run()","metricfu::run#run()","metricfu::generator#run!()","metricfu#run_dir()","metricfu#run_dir=()","metricfu::metric#run_external()","metricfu#run_only()","metricfu::metric#run_options()","metricfu#run_path()","metricfu::formatter::html#save_graphs()","metricfu::formatter::html#save_templatized_result()","metricfu::hotspot#score()","metricfu::churnhotspot#score_strategy()","metricfu::flayhotspot#score_strategy()","metricfu::floghotspot#score_strategy()","metricfu::hotspot#score_strategy()","metricfu::rcovhotspot#score_strategy()","metricfu::roodihotspot#score_strategy()","metricfu::saikurohotspot#score_strategy()","metricfu::statshotspot#score_strategy()","reekhotspot#score_strategy()","metricfu::io::filesystem#scratch_directory()","metricfu::io::filesystem#set_code_dirs()","metricfu::io::filesystem#set_directories()","metricfu#setup()","metricfu::formatter::html#show_in_browser()","metricfu::cli::client#shutdown()","metricfu::cli::helper#shutdown()","metricfu::table#size()","metricfu::reporter#start()","metricfu::linenumbers#start_line_for_method()","metricfu::reporter#start_metric()","metricfu::hotspotrankedproblemlocation#stringify_keys()","metricfu::hotspotscoringstrategies#sum()","metricfu::gemrun#summary()","metricfu::environment#supports_ripper?()","metricfu::analyzertables#table()","metricfu::analyzertables#tables_for()","awesometemplate#template_directory()","metricfu::canegrapher#title()","metricfu::flaygrapher#title()","metricfu::floggrapher#title()","metricfu::grapher#title()","metricfu::railsbestpracticesgrapher#title()","metricfu::rcovgrapher#title()","metricfu::reekgrapher#title()","metricfu::roodigrapher#title()","metricfu::statsgrapher#title()","metricfu::canegenerator#to_h()","metricfu::churngenerator#to_h()","metricfu::flaygenerator#to_h()","metricfu::floggenerator#to_h()","metricfu::hotspotsgenerator#to_h()","metricfu::methodcontainer#to_h()","metricfu::railsbestpracticesgenerator#to_h()","metricfu::rcovgenerator#to_h()","metricfu::rcovgenerator::line#to_h()","metricfu::reekgenerator#to_h()","metricfu::roodigenerator#to_h()","metricfu::saikurogenerator#to_h()","metricfu::saikuroparsingelement#to_h()","metricfu::saikuroscratchfile#to_h()","metricfu::statsgenerator#to_h()","metricfu::hotspotrankedproblemlocation#to_hash()","metricfu::location#to_hash()","metricfu::location#to_key()","metricfu::hotspotanalyzer#tool_analyzers()","metricfu::analyzertables#tool_tables()","metricfu::ranking#top()","metricfu::constantize#underscore()","metricfu::gemversion#unknown_dependency()","metricfu::cli::helper#usage()","metricfu::environment#verbose()","metricfu::environment#verbose=()","metricfu::cli::helper#version()","metricfu::environment#version()","metricfu::hotspotrankings#worst_classes()","metricfu::hotspotrankings#worst_files()","metricfu::hotspotanalyzedproblems#worst_items()","metricfu::hotspotrankings#worst_methods()","awesometemplate#write()","awesometemplate#write_file_data()","metricfu::io#write_output()","metricfu::formatter::html#write_template()",""],"info":[["AwesomeTemplate","","AwesomeTemplate.html","",""],["MetricFu","","MetricFu.html","","<p>Encapsulates the configuration options for each metric\n<p>see github.com/grosser/pru/blob/master/bin/pru …\n"],["MetricFu::AnalysisError","","MetricFu/AnalysisError.html","",""],["MetricFu::AnalyzerTables","","MetricFu/AnalyzerTables.html","",""],["MetricFu::CaneGenerator","","MetricFu/CaneGenerator.html","",""],["MetricFu::CaneGrapher","","MetricFu/CaneGrapher.html","",""],["MetricFu::CaneViolations","","MetricFu/CaneViolations.html","",""],["MetricFu::CaneViolations::AbcComplexity","","MetricFu/CaneViolations/AbcComplexity.html","",""],["MetricFu::CaneViolations::Comment","","MetricFu/CaneViolations/Comment.html","",""],["MetricFu::CaneViolations::Documentation","","MetricFu/CaneViolations/Documentation.html","",""],["MetricFu::CaneViolations::LineStyle","","MetricFu/CaneViolations/LineStyle.html","",""],["MetricFu::CaneViolations::Others","","MetricFu/CaneViolations/Others.html","",""],["MetricFu::ChurnGenerator","","MetricFu/ChurnGenerator.html","",""],["MetricFu::ChurnHotspot","","MetricFu/ChurnHotspot.html","",""],["MetricFu::ClassMethodNode","","MetricFu/ClassMethodNode.html","",""],["MetricFu::Cli","","MetricFu/Cli.html","",""],["MetricFu::Cli::Client","","MetricFu/Cli/Client.html","",""],["MetricFu::Cli::Helper","","MetricFu/Cli/Helper.html","",""],["MetricFu::Cli::MicroOptParse","","MetricFu/Cli/MicroOptParse.html","","<p>see github.com/florianpilz/CLI-Option-Parser-Examples\nraw.github.com/florianpilz/micro-optparse/master/lib/micro-optparse/parser.rb\n…\n"],["MetricFu::Cli::MicroOptParse::Parser","","MetricFu/Cli/MicroOptParse/Parser.html","",""],["MetricFu::Configuration","","MetricFu/Configuration.html","","<p>Configuration\n<p>The Configuration class, as it sounds, provides methods for configuring the\nbehaviour of …\n"],["MetricFu::Constantize","","MetricFu/Constantize.html","",""],["MetricFu::Environment","","MetricFu/Environment.html","",""],["MetricFu::FlayGenerator","","MetricFu/FlayGenerator.html","",""],["MetricFu::FlayGrapher","","MetricFu/FlayGrapher.html","",""],["MetricFu::FlayHotspot","","MetricFu/FlayHotspot.html","",""],["MetricFu::FlogGenerator","","MetricFu/FlogGenerator.html","",""],["MetricFu::FlogGrapher","","MetricFu/FlogGrapher.html","",""],["MetricFu::FlogHotspot","","MetricFu/FlogHotspot.html","",""],["MetricFu::Formatter","","MetricFu/Formatter.html","",""],["MetricFu::Formatter::HTML","","MetricFu/Formatter/HTML.html","",""],["MetricFu::Formatter::Templates","","MetricFu/Formatter/Templates.html","",""],["MetricFu::Formatter::YAML","","MetricFu/Formatter/YAML.html","",""],["MetricFu::GemRun","","MetricFu/GemRun.html","",""],["MetricFu::GemVersion","","MetricFu/GemVersion.html","",""],["MetricFu::Generator","","MetricFu/Generator.html","","<p>Generator\n<p>The Generator class is an abstract class that provides the skeleton for\nproducing different …\n"],["MetricFu::Graph","","MetricFu/Graph.html","",""],["MetricFu::Grapher","","MetricFu/Grapher.html","",""],["MetricFu::Grouping","","MetricFu/Grouping.html","",""],["MetricFu::Hotspot","","MetricFu/Hotspot.html","",""],["MetricFu::HotspotAnalyzedProblems","","MetricFu/HotspotAnalyzedProblems.html","",""],["MetricFu::HotspotAnalyzer","","MetricFu/HotspotAnalyzer.html","",""],["MetricFu::HotspotGroupings","","MetricFu/HotspotGroupings.html","",""],["MetricFu::HotspotProblems","","MetricFu/HotspotProblems.html","",""],["MetricFu::HotspotRankedProblemLocation","","MetricFu/HotspotRankedProblemLocation.html","",""],["MetricFu::HotspotRankings","","MetricFu/HotspotRankings.html","",""],["MetricFu::HotspotScoringStrategies","","MetricFu/HotspotScoringStrategies.html","",""],["MetricFu::HotspotsGenerator","","MetricFu/HotspotsGenerator.html","",""],["MetricFu::InstanceMethodNode","","MetricFu/InstanceMethodNode.html","",""],["MetricFu::Io","","MetricFu/Io.html","",""],["MetricFu::Io::FileSystem","","MetricFu/Io/FileSystem.html","","<p>TODO: Move this module / functionality elsewhere and make less verbose\n"],["MetricFu::LineNumbers","","MetricFu/LineNumbers.html","",""],["MetricFu::Loader","","MetricFu/Loader.html","",""],["MetricFu::Location","","MetricFu/Location.html","",""],["MetricFu::MethodContainer","","MetricFu/MethodContainer.html","",""],["MetricFu::Metric","","MetricFu/Metric.html","",""],["MetricFu::MetricCane","","MetricFu/MetricCane.html","",""],["MetricFu::MetricChurn","","MetricFu/MetricChurn.html","",""],["MetricFu::MetricFlay","","MetricFu/MetricFlay.html","",""],["MetricFu::MetricFlog","","MetricFu/MetricFlog.html","",""],["MetricFu::MetricHotspots","","MetricFu/MetricHotspots.html","",""],["MetricFu::MetricRailsBestPractices","","MetricFu/MetricRailsBestPractices.html","",""],["MetricFu::MetricRcov","","MetricFu/MetricRcov.html","",""],["MetricFu::MetricReek","","MetricFu/MetricReek.html","",""],["MetricFu::MetricRoodi","","MetricFu/MetricRoodi.html","",""],["MetricFu::MetricSaikuro","","MetricFu/MetricSaikuro.html","",""],["MetricFu::MetricStats","","MetricFu/MetricStats.html","",""],["MetricFu::RailsBestPracticesGenerator","","MetricFu/RailsBestPracticesGenerator.html","",""],["MetricFu::RailsBestPracticesGrapher","","MetricFu/RailsBestPracticesGrapher.html","",""],["MetricFu::Ranking","","MetricFu/Ranking.html","",""],["MetricFu::RcovGenerator","","MetricFu/RcovGenerator.html","",""],["MetricFu::RcovGenerator::Line","","MetricFu/RcovGenerator/Line.html","",""],["MetricFu::RcovGrapher","","MetricFu/RcovGrapher.html","",""],["MetricFu::RcovHotspot","","MetricFu/RcovHotspot.html","",""],["MetricFu::Record","","MetricFu/Record.html","",""],["MetricFu::ReekGenerator","","MetricFu/ReekGenerator.html","",""],["MetricFu::ReekGrapher","","MetricFu/ReekGrapher.html","",""],["MetricFu::Reporter","","MetricFu/Reporter.html","",""],["MetricFu::Result","","MetricFu/Result.html","","<p>Result\n<p>The Result class is responsible for one thing:\n<p>It tracks the results generated by each metric used …\n"],["MetricFu::RoodiGenerator","","MetricFu/RoodiGenerator.html","",""],["MetricFu::RoodiGrapher","","MetricFu/RoodiGrapher.html","",""],["MetricFu::RoodiHotspot","","MetricFu/RoodiHotspot.html","",""],["MetricFu::Run","","MetricFu/Run.html","",""],["MetricFu::SaikuroGenerator","","MetricFu/SaikuroGenerator.html","",""],["MetricFu::SaikuroHotspot","","MetricFu/SaikuroHotspot.html","",""],["MetricFu::SaikuroParsingElement","","MetricFu/SaikuroParsingElement.html","",""],["MetricFu::SaikuroScratchFile","","MetricFu/SaikuroScratchFile.html","",""],["MetricFu::SingletonMethodNode","","MetricFu/SingletonMethodNode.html","",""],["MetricFu::StatsGenerator","","MetricFu/StatsGenerator.html","",""],["MetricFu::StatsGrapher","","MetricFu/StatsGrapher.html","",""],["MetricFu::StatsHotspot","","MetricFu/StatsHotspot.html","",""],["MetricFu::Table","","MetricFu/Table.html","",""],["MetricFu::Template","","MetricFu/Template.html","","<p>The Template class is intended as an abstract class for concrete template\nclasses to subclass.  It provides …\n"],["MetricFu::Utility","","MetricFu/Utility.html","",""],["MfDebugger","","MfDebugger.html","",""],["MfDebugger::Logger","","MfDebugger/Logger.html","",""],["Object","","Object.html","",""],["ReekHotspot","","ReekHotspot.html","",""],["<<","MetricFu::SaikuroParsingElement","MetricFu/SaikuroParsingElement.html#method-i-3C-3C","(line)",""],["<<","MetricFu::Table","MetricFu/Table.html#method-i-3C-3C","(row)",""],["<=>","MetricFu::Location","MetricFu/Location.html#method-i-3C-3D-3E","(other)",""],["[]","MetricFu::Record","MetricFu/Record.html#method-i-5B-5D","(key)",""],["[]","MetricFu::Table","MetricFu/Table.html#method-i-5B-5D","(index)",""],["[]=","MetricFu::Record","MetricFu/Record.html#method-i-5B-5D-3D","(key, value)",""],["activate","MetricFu::Metric","MetricFu/Metric.html#method-i-activate","()","<p>TODO: Confirm this catches load errors from requires in subclasses, such as\nfor flog\n"],["activate","MetricFu::MetricCane","MetricFu/MetricCane.html#method-i-activate","()",""],["activate","MetricFu::MetricChurn","MetricFu/MetricChurn.html#method-i-activate","()",""],["activate","MetricFu::MetricFlay","MetricFu/MetricFlay.html#method-i-activate","()",""],["activate","MetricFu::MetricFlog","MetricFu/MetricFlog.html#method-i-activate","()",""],["activate","MetricFu::MetricRailsBestPractices","MetricFu/MetricRailsBestPractices.html#method-i-activate","()",""],["activate","MetricFu::MetricRcov","MetricFu/MetricRcov.html#method-i-activate","()",""],["activate","MetricFu::MetricReek","MetricFu/MetricReek.html#method-i-activate","()",""],["activate","MetricFu::MetricRoodi","MetricFu/MetricRoodi.html#method-i-activate","()",""],["activate","MetricFu::MetricSaikuro","MetricFu/MetricSaikuro.html#method-i-activate","()",""],["activate","MetricFu::MetricStats","MetricFu/MetricStats.html#method-i-activate","()",""],["add","MetricFu::Graph","MetricFu/Graph.html#method-i-add","(metric_name, graph_engine, output_directory = MetricFu::Io::FileSystem.directory('output_directory'))",""],["add","MetricFu::Result","MetricFu/Result.html#method-i-add","(result_type)","<p>Adds a hash from a passed result, produced by one of the Generator classes\nto the aggregate result_hash …\n"],["add_method","MetricFu::MethodContainer","MetricFu/MethodContainer.html#method-i-add_method","(full_method_name, operators, score, path)",""],["add_path","MetricFu::MethodContainer","MetricFu/MethodContainer.html#method-i-add_path","(path)",""],["analyze","MetricFu::CaneGenerator","MetricFu/CaneGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::ChurnGenerator","MetricFu/ChurnGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::FlayGenerator","MetricFu/FlayGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::FlogGenerator","MetricFu/FlogGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::HotspotsGenerator","MetricFu/HotspotsGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::RailsBestPracticesGenerator","MetricFu/RailsBestPracticesGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::RoodiGenerator","MetricFu/RoodiGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-analyze","()",""],["analyze","MetricFu::StatsGenerator","MetricFu/StatsGenerator.html#method-i-analyze","()",""],["analyzed_problems","MetricFu::HotspotAnalyzer","MetricFu/HotspotAnalyzer.html#method-i-analyzed_problems","()",""],["analyzer_for_metric","MetricFu::Hotspot","MetricFu/Hotspot.html#method-c-analyzer_for_metric","(metric)",""],["analyzers","MetricFu::Hotspot","MetricFu/Hotspot.html#method-c-analyzers","()",""],["artifact_dir","MetricFu","MetricFu.html#method-i-artifact_dir","()",""],["artifact_dir","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-c-artifact_dir","()",""],["artifact_dir=","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-c-artifact_dir-3D","(artifact_dir)",""],["artifact_subdirs","MetricFu","MetricFu.html#method-i-artifact_subdirs","()",""],["as_yaml","MetricFu::Result","MetricFu/Result.html#method-i-as_yaml","()","<p>Renders the result of the result_hash into a yaml serialization ready for\nwriting out to a file.\n<p>@return …\n"],["assemble_files","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-c-assemble_files","(glob)",""],["assert_sub_table_has_data","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-assert_sub_table_has_data","()",""],["average","MetricFu::HotspotScoringStrategies","MetricFu/HotspotScoringStrategies.html#method-i-average","(scores)",""],["banner","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-banner","()",""],["build_output_from_line_numbers","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-build_output_from_line_numbers","(out, line_numbers, file_data)",""],["calculate_score","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-calculate_score","(metric_ranking, item)",""],["calculate_scores","MetricFu::HotspotRankings","MetricFu/HotspotRankings.html#method-i-calculate_scores","(tool_analyzers, granularities)",""],["capture_output","MfDebugger::Logger","MfDebugger/Logger.html#method-c-capture_output","(&block)","<p>From episode 029 of Ruby Tapas by Avdi\nrubytapas.dpdcart.com/subscriber/post?id=88\n"],["class_for","MetricFu::Formatter","MetricFu/Formatter.html#method-c-class_for","(format)",""],["class_location","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-class_location","()",""],["class_name","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-class_name","()",""],["clean_ascii_text","MetricFu::Utility","MetricFu/Utility.html#method-i-clean_ascii_text","(text)","<p>Removes non-ASCII characters\n"],["column","MetricFu::Table","MetricFu/Table.html#method-i-column","(column_name)",""],["columns","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-columns","()",""],["columns","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-columns","()",""],["columns","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-columns","()",""],["columns","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-columns","()",""],["columns","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-columns","()",""],["columns","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-columns","()",""],["columns","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-columns","()",""],["columns","ReekHotspot","ReekHotspot.html#method-i-columns","()",""],["command","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-command","()",""],["command=","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-command-3D","(command)",""],["complete!","MetricFu::Cli","MetricFu/Cli.html#method-c-complete-21","()",""],["configuration","MetricFu","MetricFu.html#method-c-configuration","()","<p>The @configuration class variable holds a global type configuration object\nfor any parts of the system …\n"],["configure","MetricFu","MetricFu.html#method-c-configure","()",""],["configure_formatter","MetricFu::Configuration","MetricFu/Configuration.html#method-i-configure_formatter","(format, output = nil)","<p>TODO: Reconsider method name/behavior, as it really adds a formatter\n"],["configure_metric","MetricFu::Configuration","MetricFu/Configuration.html#method-i-configure_metric","(name)",""],["configure_metrics","MetricFu::Configuration","MetricFu/Configuration.html#method-i-configure_metrics","()",""],["configure_template","MetricFu::Formatter::Templates","MetricFu/Formatter/Templates.html#method-i-configure_template","(config)","<p>TODO: Remove config argument\n"],["configured_run_options","MetricFu::Metric","MetricFu/Metric.html#method-i-configured_run_options","()",""],["constantize","MetricFu::Constantize","MetricFu/Constantize.html#method-i-constantize","(camel_cased_word)","<p>Copied from ActiveSupport and modified so as not to introduce a dependency.\ngithub.com/rails/rails/blob/master/activesupport/lib/active_support/inflector/methods.rb#L220\n…\n"],["convert_ruby_to_html","AwesomeTemplate","AwesomeTemplate.html#method-i-convert_ruby_to_html","(ruby_text, line_number)",""],["create_artifact_subdirs","MetricFu","MetricFu.html#method-i-create_artifact_subdirs","(klass)","<p>Adds method x_dir relative to the metric_fu artifact directory to the given\nklass\n\n<pre>And strips any leading ...</pre>\n"],["create_directories","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-create_directories","(*dirs)",""],["create_dirs","MetricFu","MetricFu.html#method-i-create_dirs","(klass)","<p>TODO: Reduce duplication of directory logic Adds methods x_dir and\n_x_require for the directory x,\n\n<pre>relative ...</pre>\n"],["data","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-i-data","()",""],["data","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-i-data","()",""],["data","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-i-data","()",""],["data","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-i-data","()",""],["data","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-i-data","()",""],["data","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-i-data","()",""],["data","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-i-data","()",""],["data","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-i-data","()",""],["date","MetricFu::Grapher","MetricFu/Grapher.html#method-i-date","()",""],["debug","MfDebugger::Logger","MfDebugger/Logger.html#method-c-debug","(msg, &block)",""],["debug_info","MetricFu::Environment","MetricFu/Environment.html#method-i-debug_info","()",""],["default_artifact_dir","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-c-default_artifact_dir","()",""],["default_command","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-default_command","()",""],["default_run_args","MetricFu::Metric","MetricFu/Metric.html#method-i-default_run_args","()",""],["default_run_options","MetricFu::Metric","MetricFu/Metric.html#method-i-default_run_options","()","<p>@return default metric run options [Hash]\n"],["default_run_options","MetricFu::MetricCane","MetricFu/MetricCane.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricChurn","MetricFu/MetricChurn.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricFlay","MetricFu/MetricFlay.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricFlog","MetricFu/MetricFlog.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricHotspots","MetricFu/MetricHotspots.html#method-i-default_run_options","()","<p>TODO remove explicit Churn dependency\n"],["default_run_options","MetricFu::MetricRailsBestPractices","MetricFu/MetricRailsBestPractices.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricRcov","MetricFu/MetricRcov.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricReek","MetricFu/MetricReek.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricRoodi","MetricFu/MetricRoodi.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricSaikuro","MetricFu/MetricSaikuro.html#method-i-default_run_options","()",""],["default_run_options","MetricFu::MetricStats","MetricFu/MetricStats.html#method-i-default_run_options","()",""],["dependencies","MetricFu::GemVersion","MetricFu/GemVersion.html#method-c-dependencies","()",""],["dependencies_summary","MetricFu::GemVersion","MetricFu/GemVersion.html#method-c-dependencies_summary","()",""],["dir_for","MetricFu::Io","MetricFu/Io.html#method-i-dir_for","(path)",""],["directories","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-directories","()",""],["directory","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-directory","(name)",""],["display_results","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-display_results","()",""],["display_results","MetricFu::Reporter","MetricFu/Reporter.html#method-i-display_results","()",""],["display_results","MetricFu::Run","MetricFu/Run.html#method-i-display_results","()",""],["each","MetricFu::Grouping","MetricFu/Grouping.html#method-i-each","()",""],["each","MetricFu::Table","MetricFu/Table.html#method-i-each","()",""],["each_singleton_method","MetricFu::SingletonMethodNode","MetricFu/SingletonMethodNode.html#method-i-each_singleton_method","(&block)",""],["emit","MetricFu::CaneGenerator","MetricFu/CaneGenerator.html#method-i-emit","()",""],["emit","MetricFu::ChurnGenerator","MetricFu/ChurnGenerator.html#method-i-emit","()",""],["emit","MetricFu::FlayGenerator","MetricFu/FlayGenerator.html#method-i-emit","()",""],["emit","MetricFu::FlogGenerator","MetricFu/FlogGenerator.html#method-i-emit","()",""],["emit","MetricFu::HotspotsGenerator","MetricFu/HotspotsGenerator.html#method-i-emit","()",""],["emit","MetricFu::RailsBestPracticesGenerator","MetricFu/RailsBestPracticesGenerator.html#method-i-emit","()",""],["emit","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-emit","()",""],["emit","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-emit","()",""],["emit","MetricFu::RoodiGenerator","MetricFu/RoodiGenerator.html#method-i-emit","()",""],["emit","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-emit","()",""],["emit","MetricFu::StatsGenerator","MetricFu/StatsGenerator.html#method-i-emit","()",""],["enable","MetricFu::Metric","MetricFu/Metric.html#method-i-enable","()",""],["enable","MetricFu::MetricCane","MetricFu/MetricCane.html#method-i-enable","()",""],["enable","MetricFu::MetricChurn","MetricFu/MetricChurn.html#method-i-enable","()",""],["enable","MetricFu::MetricFlay","MetricFu/MetricFlay.html#method-i-enable","()",""],["enable","MetricFu::MetricFlog","MetricFu/MetricFlog.html#method-i-enable","()",""],["enable","MetricFu::MetricHotspots","MetricFu/MetricHotspots.html#method-i-enable","()",""],["enable","MetricFu::MetricRailsBestPractices","MetricFu/MetricRailsBestPractices.html#method-i-enable","()",""],["enable","MetricFu::MetricRcov","MetricFu/MetricRcov.html#method-i-enable","()",""],["enable","MetricFu::MetricReek","MetricFu/MetricReek.html#method-i-enable","()",""],["enable","MetricFu::MetricRoodi","MetricFu/MetricRoodi.html#method-i-enable","()",""],["enable","MetricFu::MetricSaikuro","MetricFu/MetricSaikuro.html#method-i-enable","()",""],["enable","MetricFu::MetricStats","MetricFu/MetricStats.html#method-i-enable","()",""],["enabled_metrics","MetricFu::Metric","MetricFu/Metric.html#method-c-enabled_metrics","()",""],["environment_details","MetricFu::Environment","MetricFu/Environment.html#method-i-environment_details","()",""],["eql?","MetricFu::Location","MetricFu/Location.html#method-i-eql-3F","(other)","<p>defining :eql? and :hash to use Location as a hash key\n"],["executable_name","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-executable_name","()",""],["execute","MetricFu::GemRun","MetricFu/GemRun.html#method-i-execute","()",""],["file_for","MetricFu::Io","MetricFu/Io.html#method-i-file_for","(path)",""],["file_globs_to_ignore","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-file_globs_to_ignore","()",""],["file_location","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-file_location","()",""],["file_path","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-file_path","()",""],["filename","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-filename","()",""],["filepath","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-filepath","()",""],["finalize","MetricFu::Location","MetricFu/Location.html#method-i-finalize","()",""],["finish","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-finish","()",""],["finish","MetricFu::Formatter::YAML","MetricFu/Formatter/YAML.html#method-i-finish","()",""],["finish","MetricFu::Reporter","MetricFu/Reporter.html#method-i-finish","()",""],["finish_metric","MetricFu::Reporter","MetricFu/Reporter.html#method-i-finish_metric","(metric)",""],["first_row","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-first_row","()",""],["for","MetricFu::GemVersion","MetricFu/GemVersion.html#method-i-for","(name)",""],["for","MetricFu::GemVersion","MetricFu/GemVersion.html#method-c-for","(name)",""],["for","MetricFu::Location","MetricFu/Location.html#method-c-for","(class_or_method_name)",""],["full_name","MetricFu::ClassMethodNode","MetricFu/ClassMethodNode.html#method-i-full_name","(module_name, class_name)",""],["full_name","MetricFu::InstanceMethodNode","MetricFu/InstanceMethodNode.html#method-i-full_name","(module_name, class_name)",""],["full_name","MetricFu::SingletonMethodNode","MetricFu/SingletonMethodNode.html#method-i-full_name","(class_name)",""],["gem_name","MetricFu::Metric","MetricFu/Metric.html#method-i-gem_name","()",""],["gem_runtime_dependencies","MetricFu::GemVersion","MetricFu/GemVersion.html#method-i-gem_runtime_dependencies","()",""],["gemspec","MetricFu::GemVersion","MetricFu/GemVersion.html#method-i-gemspec","()",""],["generate","MetricFu::Graph","MetricFu/Graph.html#method-i-generate","()",""],["generate_records","MetricFu::AnalyzerTables","MetricFu/AnalyzerTables.html#method-i-generate_records","()",""],["generate_records","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-generate_records","(data, table)","<p>Transforms the data param, if non-nil, into a hash with keys:\n\n<pre>'metric',  etc.\nand appends the hash to ...</pre>\n"],["generate_records","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-generate_records","(data, table)",""],["generate_records","ReekHotspot","ReekHotspot.html#method-i-generate_records","(data, table)",""],["generate_result","MetricFu::Generator","MetricFu/Generator.html#method-i-generate_result","()","<p>Provides a template method to drive the production of a metric from a\nconcrete implementation of this …\n"],["generators","MetricFu::Generator","MetricFu/Generator.html#method-c-generators","()","<p>@return all subclassed generators [Array&lt;MetricFu::Generator&gt;]\n"],["get","MetricFu::Location","MetricFu/Location.html#method-c-get","(file_path, class_name, method_name)",""],["get_class_names","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-get_class_names","()",""],["get_elements","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-get_elements","(io)",""],["get_generator","MetricFu::Generator","MetricFu/Generator.html#method-c-get_generator","(metric)",""],["get_grapher","MetricFu::Grapher","MetricFu/Grapher.html#method-c-get_grapher","(metric)",""],["get_grouping","MetricFu::HotspotGroupings","MetricFu/HotspotGroupings.html#method-i-get_grouping","()",""],["get_mean","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-get_mean","(collection)",""],["get_metric","MetricFu::Metric","MetricFu/Metric.html#method-c-get_metric","(name)",""],["get_metrics","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::Grapher","MetricFu/Grapher.html#method-i-get_metrics","(metrics, sortable_prefix)",""],["get_metrics","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-i-get_metrics","(metrics, date)",""],["get_metrics","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-i-get_metrics","(metrics, date)",""],["glob","MetricFu::Utility","MetricFu/Utility.html#method-i-glob","(*args)",""],["graph","MetricFu","MetricFu.html#method-c-graph","()",""],["graph!","MetricFu::Grapher","MetricFu/Grapher.html#method-i-graph-21","()",""],["graph_engine","MetricFu::Configuration","MetricFu/Configuration.html#method-i-graph_engine","()",""],["graphed_metrics","MetricFu::Configuration","MetricFu/Configuration.html#method-i-graphed_metrics","()","<p>@return [Array&lt;Symbol&gt;] names of enabled metrics with graphs\n"],["graphers","MetricFu::Grapher","MetricFu/Grapher.html#method-c-graphers","()","<p>@return all subclassed graphers [Array&lt;MetricFu::Grapher&gt;]\n"],["group_by","MetricFu::HotspotProblems","MetricFu/HotspotProblems.html#method-i-group_by","(sub_table, by = 'metric')",""],["group_by_metric","MetricFu::Table","MetricFu/Table.html#method-i-group_by_metric","()",""],["handle_run_error","MetricFu::GemRun","MetricFu/GemRun.html#method-i-handle_run_error","(run_error)",""],["handle_system_exit","MetricFu::GemRun","MetricFu/GemRun.html#method-i-handle_system_exit","(system_exit)",""],["has_graph?","MetricFu::Metric","MetricFu/Metric.html#method-i-has_graph-3F","()","<p>@return metric_options [Hash]\n"],["has_graph?","MetricFu::MetricCane","MetricFu/MetricCane.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricChurn","MetricFu/MetricChurn.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricFlay","MetricFu/MetricFlay.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricFlog","MetricFu/MetricFlog.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricHotspots","MetricFu/MetricHotspots.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricRailsBestPractices","MetricFu/MetricRailsBestPractices.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricRcov","MetricFu/MetricRcov.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricReek","MetricFu/MetricReek.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricRoodi","MetricFu/MetricRoodi.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricSaikuro","MetricFu/MetricSaikuro.html#method-i-has_graph-3F","()",""],["has_graph?","MetricFu::MetricStats","MetricFu/MetricStats.html#method-i-has_graph-3F","()",""],["has_key?","MetricFu::Record","MetricFu/Record.html#method-i-has_key-3F","(key)",""],["highest_score","MetricFu::MethodContainer","MetricFu/MethodContainer.html#method-i-highest_score","()",""],["hotspots","MetricFu::HotspotAnalyzer","MetricFu/HotspotAnalyzer.html#method-i-hotspots","()",""],["identity","MetricFu::HotspotScoringStrategies","MetricFu/HotspotScoringStrategies.html#method-i-identity","(ranking, item)","<p>Use the score you got\n\n<pre>(ex flog score of 20 is not bad even if it is the top one in project)</pre>\n"],["immediate_shutdown!","MetricFu::Cli","MetricFu/Cli.html#method-c-immediate_shutdown-21","()",""],["in_method?","MetricFu::LineNumbers","MetricFu/LineNumbers.html#method-i-in_method-3F","(line_number)","<p>@param line_number [Integer] @return [Boolean] if the given line number is\nin a method\n"],["included","MetricFu::Environment","MetricFu/Environment.html#method-c-included","(host_class)","<p>HACK: for using this module via inclusion in Configuration\n"],["inherited","MetricFu::Generator","MetricFu/Generator.html#method-c-inherited","(subclass)",""],["inherited","MetricFu::Grapher","MetricFu/Grapher.html#method-c-inherited","(subclass)",""],["inherited","MetricFu::Hotspot","MetricFu/Hotspot.html#method-c-inherited","(subclass)",""],["inherited","MetricFu::Metric","MetricFu/Metric.html#method-c-inherited","(subclass)",""],["io_for","MetricFu::Io","MetricFu/Io.html#method-i-io_for","(path_or_io)","<p>Yields an io object for writing output. @example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">io_for</span>(<span class=\"ruby-string\">'path/to/file'</span>) <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">io</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">io</span>.<span class=\"ruby-identifier\">write</span>(<span class=\"ruby-identifier\">output</span>)\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["is_cruise_control_rb?","MetricFu::Environment","MetricFu/Environment.html#method-i-is_cruise_control_rb-3F","()",""],["is_valid_text_file?","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-c-is_valid_text_file-3F","(path)",""],["jruby?","MetricFu::Environment","MetricFu/Environment.html#method-i-jruby-3F","()",""],["length","MetricFu::Table","MetricFu/Table.html#method-i-length","()",""],["lib_dir","MetricFu","MetricFu.html#method-i-lib_dir","()",""],["lib_require","MetricFu::Loader","MetricFu/Loader.html#method-i-lib_require","(base='',&block)",""],["library_details","MetricFu::Environment","MetricFu/Environment.html#method-i-library_details","()",""],["library_dirs","MetricFu","MetricFu.html#method-i-library_dirs","()",""],["line_numbers_from_file","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-line_numbers_from_file","(filename)",""],["load_tasks","MetricFu","MetricFu.html#method-i-load_tasks","(tasks_relative_path, options={task_name: ''})","<p>Load specified task task only once\n\n<pre>if and only if rake is required and the task is not yet defined\nto ...</pre>\n"],["load_user_configuration","MetricFu","MetricFu.html#method-i-load_user_configuration","()",""],["load_yaml","MetricFu::Utility","MetricFu/Utility.html#method-i-load_yaml","(file)",""],["loader","MetricFu","MetricFu.html#method-i-loader","()",""],["location","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-location","()",""],["log","MfDebugger::Logger","MfDebugger/Logger.html#method-c-log","(msg, &block)",""],["map","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-map","(row)",""],["map_strategy","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-map_strategy","()",""],["map_strategy","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-map_strategy","()",""],["map_strategy","ReekHotspot","ReekHotspot.html#method-i-map_strategy","()",""],["mapping_strategies","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-mapping_strategies","()",""],["massage_for_reek_12","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-massage_for_reek_12","()",""],["measure","MetricFu::Run","MetricFu/Run.html#method-i-measure","()",""],["merge_classes","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-merge_classes","()",""],["method_at_line","MetricFu::LineNumbers","MetricFu/LineNumbers.html#method-i-method_at_line","(line_number)","<p>@param line_number [Integer] @return [String, nil] the method which\nincludes that line number, if any …\n"],["method_data_for_file_data","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-method_data_for_file_data","(file_data, &block)",""],["method_location","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-method_location","()",""],["method_missing","MetricFu::Metric","MetricFu/Metric.html#method-i-method_missing","(method, *args)","<p>Enable using a syntax such as metric.foo = ‘foo’\n\n<pre>by catching the missing method here,\nchecking if :foo ...</pre>\n"],["method_missing","MetricFu::Record","MetricFu/Record.html#method-i-method_missing","(name, *args, &block)",""],["method_name","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-method_name","()",""],["method_to_attr","MetricFu::Metric","MetricFu/Metric.html#method-i-method_to_attr","(method)","<p>Used above to identify the stem of a setter method\n"],["metric","MetricFu::CaneGenerator","MetricFu/CaneGenerator.html#method-c-metric","()",""],["metric","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-c-metric","()",""],["metric","MetricFu::ChurnGenerator","MetricFu/ChurnGenerator.html#method-c-metric","()",""],["metric","MetricFu::FlayGenerator","MetricFu/FlayGenerator.html#method-c-metric","()",""],["metric","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-c-metric","()",""],["metric","MetricFu::FlogGenerator","MetricFu/FlogGenerator.html#method-c-metric","()",""],["metric","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-c-metric","()",""],["metric","MetricFu::Generator","MetricFu/Generator.html#method-c-metric","()",""],["metric","MetricFu::Generator","MetricFu/Generator.html#method-i-metric","()",""],["metric","MetricFu::Hotspot","MetricFu/Hotspot.html#method-c-metric","()",""],["metric","MetricFu::HotspotsGenerator","MetricFu/HotspotsGenerator.html#method-c-metric","()",""],["metric","MetricFu::RailsBestPracticesGenerator","MetricFu/RailsBestPracticesGenerator.html#method-c-metric","()",""],["metric","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-c-metric","()",""],["metric","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-c-metric","()",""],["metric","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-c-metric","()",""],["metric","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-c-metric","()",""],["metric","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-c-metric","()",""],["metric","MetricFu::RoodiGenerator","MetricFu/RoodiGenerator.html#method-c-metric","()",""],["metric","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-c-metric","()",""],["metric","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-c-metric","()",""],["metric","MetricFu::StatsGenerator","MetricFu/StatsGenerator.html#method-c-metric","()",""],["metric","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-c-metric","()",""],["metric_config","MetricFu::Generator","MetricFu/Generator.html#method-i-metric_config","()",""],["metric_directory","MetricFu::Generator","MetricFu/Generator.html#method-i-metric_directory","()","<p>@return [String] The path of the metric directory this class is using.\n"],["metric_directory","MetricFu::Generator","MetricFu/Generator.html#method-c-metric_directory","()","<p>Returns the directory where the Generator will write any output\n"],["metric_manually_configured?","MetricFu::Configuration","MetricFu/Configuration.html#method-i-metric_manually_configured-3F","(metric)","<p>TODO: Remove this method.  If we run configure_metrics\n\n<pre>and it disabled rcov, we shouldn't have to worry ...</pre>\n"],["metrics","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-metrics","()",""],["metrics","MetricFu::Metric","MetricFu/Metric.html#method-c-metrics","()","<p>@return all subclassed metrics [Array&lt;MetricFu::Metric&gt;] ensure\n:hotspots runs last\n"],["mf_debug","MetricFu::Configuration","MetricFu/Configuration.html#method-i-mf_debug","(msg)",""],["mf_debug","MfDebugger","MfDebugger.html#method-i-mf_debug","(msg,&block)",""],["mf_log","MfDebugger","MfDebugger.html#method-i-mf_log","(msg,&block)",""],["mkdir_p","MetricFu::Utility","MetricFu/Utility.html#method-i-mkdir_p","(*args)",""],["mri?","MetricFu::Environment","MetricFu/Environment.html#method-i-mri-3F","()",""],["name","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-name","()",""],["name","MetricFu::ClassMethodNode","MetricFu/ClassMethodNode.html#method-i-name","()",""],["name","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-name","()",""],["name","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-name","()",""],["name","MetricFu::Metric","MetricFu/Metric.html#method-i-name","()","<p>@return metric name [Symbol]\n"],["name","MetricFu::MetricCane","MetricFu/MetricCane.html#method-i-name","()",""],["name","MetricFu::MetricChurn","MetricFu/MetricChurn.html#method-i-name","()",""],["name","MetricFu::MetricFlay","MetricFu/MetricFlay.html#method-i-name","()",""],["name","MetricFu::MetricFlog","MetricFu/MetricFlog.html#method-i-name","()",""],["name","MetricFu::MetricHotspots","MetricFu/MetricHotspots.html#method-i-name","()",""],["name","MetricFu::MetricRailsBestPractices","MetricFu/MetricRailsBestPractices.html#method-i-name","()",""],["name","MetricFu::MetricRcov","MetricFu/MetricRcov.html#method-i-name","()",""],["name","MetricFu::MetricReek","MetricFu/MetricReek.html#method-i-name","()",""],["name","MetricFu::MetricRoodi","MetricFu/MetricRoodi.html#method-i-name","()",""],["name","MetricFu::MetricSaikuro","MetricFu/MetricSaikuro.html#method-i-name","()",""],["name","MetricFu::MetricStats","MetricFu/MetricStats.html#method-i-name","()",""],["name","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-name","()",""],["name","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-name","()",""],["name","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-name","()",""],["name","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-name","()",""],["name","ReekHotspot","ReekHotspot.html#method-i-name","()",""],["new","MetricFu::AnalyzerTables","MetricFu/AnalyzerTables.html#method-c-new","(analyzer_columns)",""],["new","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-c-new","()",""],["new","MetricFu::Cli::Client","MetricFu/Cli/Client.html#method-c-new","()",""],["new","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-c-new","()",""],["new","MetricFu::Cli::MicroOptParse::Parser","MetricFu/Cli/MicroOptParse/Parser.html#method-c-new","()",""],["new","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-c-new","()",""],["new","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-c-new","()",""],["new","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-c-new","(opts={})",""],["new","MetricFu::Formatter::YAML","MetricFu/Formatter/YAML.html#method-c-new","(opts={})",""],["new","MetricFu::GemRun","MetricFu/GemRun.html#method-c-new","(arguments={})",""],["new","MetricFu::GemVersion","MetricFu/GemVersion.html#method-c-new","()",""],["new","MetricFu::Generator","MetricFu/Generator.html#method-c-new","(options={})",""],["new","MetricFu::Graph","MetricFu/Graph.html#method-c-new","()",""],["new","MetricFu::Grapher","MetricFu/Grapher.html#method-c-new","(opts = {})",""],["new","MetricFu::Grouping","MetricFu/Grouping.html#method-c-new","(table, opts)",""],["new","MetricFu::HotspotAnalyzedProblems","MetricFu/HotspotAnalyzedProblems.html#method-c-new","(hotspot_rankings, analyzer_tables)",""],["new","MetricFu::HotspotAnalyzer","MetricFu/HotspotAnalyzer.html#method-c-new","(result_hash)",""],["new","MetricFu::HotspotGroupings","MetricFu/HotspotGroupings.html#method-c-new","(table, opts)",""],["new","MetricFu::HotspotProblems","MetricFu/HotspotProblems.html#method-c-new","(sub_table)",""],["new","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-c-new","(sub_table, granularity)",""],["new","MetricFu::HotspotRankings","MetricFu/HotspotRankings.html#method-c-new","(tool_tables)",""],["new","MetricFu::HotspotsGenerator","MetricFu/HotspotsGenerator.html#method-c-new","(options={})",""],["new","MetricFu::LineNumbers","MetricFu/LineNumbers.html#method-c-new","(contents,file_path='')","<p>Parses ruby code to collect line numbers for class, module, and method\ndefinitions. Used by metrics that …\n"],["new","MetricFu::Loader","MetricFu/Loader.html#method-c-new","(lib_root)",""],["new","MetricFu::Location","MetricFu/Location.html#method-c-new","(file_path, class_name, method_name)",""],["new","MetricFu::MethodContainer","MetricFu/MethodContainer.html#method-c-new","(name, path)",""],["new","MetricFu::Metric","MetricFu/Metric.html#method-c-new","()",""],["new","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-c-new","()",""],["new","MetricFu::Ranking","MetricFu/Ranking.html#method-c-new","()",""],["new","MetricFu::RcovGenerator::Line","MetricFu/RcovGenerator/Line.html#method-c-new","(content, was_run)",""],["new","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-c-new","()",""],["new","MetricFu::Record","MetricFu/Record.html#method-c-new","(data, columns)",""],["new","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-c-new","()",""],["new","MetricFu::Reporter","MetricFu/Reporter.html#method-c-new","(formatters=nil)",""],["new","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-c-new","()",""],["new","MetricFu::Run","MetricFu/Run.html#method-c-new","()",""],["new","MetricFu::SaikuroParsingElement","MetricFu/SaikuroParsingElement.html#method-c-new","(line)",""],["new","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-c-new","(path)",""],["new","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-c-new","()",""],["new","MetricFu::Table","MetricFu/Table.html#method-c-new","(opts = {})",""],["new_dependency","MetricFu::GemVersion","MetricFu/GemVersion.html#method-i-new_dependency","(name, version)",""],["not_implemented","MetricFu::Generator","MetricFu/Generator.html#method-c-not_implemented","()",""],["not_implemented","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-not_implemented","()",""],["notify","MetricFu::Reporter","MetricFu/Reporter.html#method-i-notify","(event, *args)",""],["numeric_smell?","ReekHotspot","ReekHotspot.html#method-c-numeric_smell-3F","(type)",""],["open_in_browser?","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-open_in_browser-3F","()","<p>Checks to discover whether we should try and open the results of the report\nin the browser on this system. …\n"],["option","MetricFu::Cli::MicroOptParse::Parser","MetricFu/Cli/MicroOptParse/Parser.html#method-i-option","(name, desc, settings = {})",""],["option","MetricFu::Formatter::Templates","MetricFu/Formatter/Templates.html#method-i-option","(name)",""],["options","MetricFu::Formatter::Templates","MetricFu/Formatter/Templates.html#method-i-options","()",""],["osx?","MetricFu::Environment","MetricFu/Environment.html#method-i-osx-3F","()",""],["output_directory","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-output_directory","()",""],["output_filename","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::Grapher","MetricFu/Grapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-i-output_filename","()",""],["output_filename","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-i-output_filename","()",""],["parse","MetricFu::CaneViolations::AbcComplexity","MetricFu/CaneViolations/AbcComplexity.html#method-c-parse","(violation_list)",""],["parse","MetricFu::CaneViolations::Comment","MetricFu/CaneViolations/Comment.html#method-c-parse","(violation_list)",""],["parse","MetricFu::CaneViolations::Documentation","MetricFu/CaneViolations/Documentation.html#method-c-parse","(violation_list)",""],["parse","MetricFu::CaneViolations::LineStyle","MetricFu/CaneViolations/LineStyle.html#method-c-parse","(violation_list)",""],["parse","MetricFu::CaneViolations::Others","MetricFu/CaneViolations/Others.html#method-c-parse","(violation_list)",""],["path_relative_to_base","MetricFu::Io","MetricFu/Io.html#method-i-path_relative_to_base","(path)",""],["per_file_data","MetricFu::Result","MetricFu/Result.html#method-i-per_file_data","()",""],["per_file_info","MetricFu::FlogGenerator","MetricFu/FlogGenerator.html#method-i-per_file_info","(out)",""],["per_file_info","MetricFu::RailsBestPracticesGenerator","MetricFu/RailsBestPracticesGenerator.html#method-i-per_file_info","(out)",""],["per_file_info","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-per_file_info","(out)",""],["per_file_info","MetricFu::RoodiGenerator","MetricFu/RoodiGenerator.html#method-i-per_file_info","(out)",""],["per_file_info","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-per_file_info","(out)",""],["percentile","MetricFu::HotspotScoringStrategies","MetricFu/HotspotScoringStrategies.html#method-i-percentile","(ranking, item)","<p>per project score percentile\n"],["percentile","MetricFu::Ranking","MetricFu/Ranking.html#method-i-percentile","(item)",""],["present_group","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-present_group","(group)",""],["present_group","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-present_group","(group)",""],["present_group","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-present_group","(group)",""],["present_group","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-present_group","(group)","<p>@return [String] description result\n"],["present_group","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-present_group","(group)",""],["present_group","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-present_group","(group)",""],["present_group","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-present_group","(group)",""],["present_group","ReekHotspot","ReekHotspot.html#method-i-present_group","(group)",""],["print_errors","MetricFu::GemRun","MetricFu/GemRun.html#method-i-print_errors","()",""],["problems","MetricFu::HotspotProblems","MetricFu/HotspotProblems.html#method-i-problems","()",""],["problems","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-problems","()","<p>@todo redo as item,value, options = {} Note that the other option for\n‘details’ is :detailed (this isn’t …\n"],["process!","MetricFu::Cli::MicroOptParse::Parser","MetricFu/Cli/MicroOptParse/Parser.html#method-i-process-21","(arguments = ARGV)",""],["process_options","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-process_options","(argv=[])",""],["rails?","MetricFu","MetricFu.html#method-c-rails-3F","()",""],["rails?","MetricFu::Environment","MetricFu/Environment.html#method-i-rails-3F","()","<p>Perform a simple check to try and guess if we’re running against a rails\napp.\n<p>TODO This should probably …\n"],["reduce","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-reduce","(scores)",""],["reduce_strategy","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-reduce_strategy","()",""],["reduce_strategy","ReekHotspot","ReekHotspot.html#method-i-reduce_strategy","()",""],["reek_12?","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-reek_12-3F","()",""],["remove_excluded_files","MetricFu::Generator","MetricFu/Generator.html#method-i-remove_excluded_files","(paths, globs_to_remove = MetricFu::Io::FileSystem.file_globs_to_ignore)",""],["report_metrics","MetricFu::Run","MetricFu/Run.html#method-i-report_metrics","(metrics=MetricFu::Metric.enabled_metrics)",""],["reset","MetricFu","MetricFu.html#method-i-reset","()",""],["reset","MetricFu::Configuration","MetricFu/Configuration.html#method-i-reset","()",""],["reset_output_location","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-reset_output_location","()",""],["result","MetricFu","MetricFu.html#method-c-result","()","<p>MetricFu.result memoizes access to a Result object, that will be used\nthroughout the lifecycle of the …\n"],["rm_rf","MetricFu::Utility","MetricFu/Utility.html#method-i-rm_rf","(*args)",""],["root_dir","MetricFu","MetricFu.html#method-i-root_dir","()",""],["round_to_tenths","MetricFu::Generator","MetricFu/Generator.html#method-i-round_to_tenths","(decimal)",""],["rubinius?","MetricFu::Environment","MetricFu/Environment.html#method-i-rubinius-3F","()",""],["ruby18?","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby18-3F","()",""],["ruby192?","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby192-3F","()",""],["ruby_details","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby_details","()","<p>To consider $LOADED_FEATURES $LOAD_PATH\n"],["ruby_flavor","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby_flavor","()",""],["ruby_strangely_makes_accessors_private?","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby_strangely_makes_accessors_private-3F","()",""],["ruby_version","MetricFu::Environment","MetricFu/Environment.html#method-i-ruby_version","()",""],["run","MetricFu","MetricFu.html#method-i-run","(options)",""],["run","MetricFu::Cli::Client","MetricFu/Cli/Client.html#method-i-run","(argv=ARGV.dup)",""],["run","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-run","(options={})",""],["run","MetricFu::Configuration","MetricFu/Configuration.html#method-c-run","()","<p>This allows us to have a nice syntax like:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">MetricFu</span>.<span class=\"ruby-identifier\">run</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">config</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">configure_metric</span>(:<span class=\"ruby-identifier\">churn</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["run","MetricFu::GemRun","MetricFu/GemRun.html#method-i-run","()",""],["run","MetricFu::Metric","MetricFu/Metric.html#method-i-run","()",""],["run","MetricFu::Run","MetricFu/Run.html#method-i-run","(options={})",""],["run!","MetricFu::Generator","MetricFu/Generator.html#method-i-run-21","(args)",""],["run_dir","MetricFu","MetricFu.html#method-i-run_dir","()",""],["run_dir=","MetricFu","MetricFu.html#method-i-run_dir-3D","(run_dir)",""],["run_external","MetricFu::Metric","MetricFu/Metric.html#method-i-run_external","(args = default_run_args)",""],["run_only","MetricFu","MetricFu.html#method-i-run_only","(metrics_to_run_names, options)",""],["run_options","MetricFu::Metric","MetricFu/Metric.html#method-i-run_options","()","<p>@return metric run options [Hash]\n"],["run_path","MetricFu","MetricFu.html#method-i-run_path","()",""],["save_graphs","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-save_graphs","()",""],["save_templatized_result","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-save_templatized_result","()","<p>Instantiates a new template class based on the configuration set in\nMetricFu::Configuration, or through …\n"],["score","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-score","(metric_ranking, item)","<p>@return [Integer]\n"],["score_strategy","MetricFu::ChurnHotspot","MetricFu/ChurnHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::FlayHotspot","MetricFu/FlayHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::FlogHotspot","MetricFu/FlogHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::Hotspot","MetricFu/Hotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::RcovHotspot","MetricFu/RcovHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::RoodiHotspot","MetricFu/RoodiHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::SaikuroHotspot","MetricFu/SaikuroHotspot.html#method-i-score_strategy","()",""],["score_strategy","MetricFu::StatsHotspot","MetricFu/StatsHotspot.html#method-i-score_strategy","()",""],["score_strategy","ReekHotspot","ReekHotspot.html#method-i-score_strategy","()",""],["scratch_directory","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-scratch_directory","(name)",""],["set_code_dirs","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-set_code_dirs","()","<p>Add the ‘app’ directory if we’re running within rails.\n"],["set_directories","MetricFu::Io::FileSystem","MetricFu/Io/FileSystem.html#method-i-set_directories","()",""],["setup","MetricFu","MetricFu.html#method-i-setup","()",""],["show_in_browser","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-show_in_browser","(dir)","<p>Shows ‘index.html’ from the passed directory in the browser if we’re able\nto open the browser on this …\n"],["shutdown","MetricFu::Cli::Client","MetricFu/Cli/Client.html#method-i-shutdown","()",""],["shutdown","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-shutdown","()",""],["size","MetricFu::Table","MetricFu/Table.html#method-i-size","()",""],["start","MetricFu::Reporter","MetricFu/Reporter.html#method-i-start","()",""],["start_line_for_method","MetricFu::LineNumbers","MetricFu/LineNumbers.html#method-i-start_line_for_method","(method)","<p>@param method [String] the method name being queried @erturn [Integer, nil]\nthe line number at which …\n"],["start_metric","MetricFu::Reporter","MetricFu/Reporter.html#method-i-start_metric","(metric)",""],["stringify_keys","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-stringify_keys","(hash)",""],["sum","MetricFu::HotspotScoringStrategies","MetricFu/HotspotScoringStrategies.html#method-i-sum","(scores)",""],["summary","MetricFu::GemRun","MetricFu/GemRun.html#method-i-summary","()",""],["supports_ripper?","MetricFu::Environment","MetricFu/Environment.html#method-i-supports_ripper-3F","()",""],["table","MetricFu::AnalyzerTables","MetricFu/AnalyzerTables.html#method-i-table","()",""],["tables_for","MetricFu::AnalyzerTables","MetricFu/AnalyzerTables.html#method-i-tables_for","(item)",""],["template_directory","AwesomeTemplate","AwesomeTemplate.html#method-i-template_directory","()",""],["title","MetricFu::CaneGrapher","MetricFu/CaneGrapher.html#method-i-title","()",""],["title","MetricFu::FlayGrapher","MetricFu/FlayGrapher.html#method-i-title","()",""],["title","MetricFu::FlogGrapher","MetricFu/FlogGrapher.html#method-i-title","()",""],["title","MetricFu::Grapher","MetricFu/Grapher.html#method-i-title","()",""],["title","MetricFu::RailsBestPracticesGrapher","MetricFu/RailsBestPracticesGrapher.html#method-i-title","()",""],["title","MetricFu::RcovGrapher","MetricFu/RcovGrapher.html#method-i-title","()",""],["title","MetricFu::ReekGrapher","MetricFu/ReekGrapher.html#method-i-title","()",""],["title","MetricFu::RoodiGrapher","MetricFu/RoodiGrapher.html#method-i-title","()",""],["title","MetricFu::StatsGrapher","MetricFu/StatsGrapher.html#method-i-title","()",""],["to_h","MetricFu::CaneGenerator","MetricFu/CaneGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::ChurnGenerator","MetricFu/ChurnGenerator.html#method-i-to_h","()","<p>ensure hash only has the :churn key\n"],["to_h","MetricFu::FlayGenerator","MetricFu/FlayGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::FlogGenerator","MetricFu/FlogGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::HotspotsGenerator","MetricFu/HotspotsGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::MethodContainer","MetricFu/MethodContainer.html#method-i-to_h","()",""],["to_h","MetricFu::RailsBestPracticesGenerator","MetricFu/RailsBestPracticesGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::RcovGenerator","MetricFu/RcovGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::RcovGenerator::Line","MetricFu/RcovGenerator/Line.html#method-i-to_h","()",""],["to_h","MetricFu::ReekGenerator","MetricFu/ReekGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::RoodiGenerator","MetricFu/RoodiGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::SaikuroGenerator","MetricFu/SaikuroGenerator.html#method-i-to_h","()",""],["to_h","MetricFu::SaikuroParsingElement","MetricFu/SaikuroParsingElement.html#method-i-to_h","()",""],["to_h","MetricFu::SaikuroScratchFile","MetricFu/SaikuroScratchFile.html#method-i-to_h","()",""],["to_h","MetricFu::StatsGenerator","MetricFu/StatsGenerator.html#method-i-to_h","()",""],["to_hash","MetricFu::HotspotRankedProblemLocation","MetricFu/HotspotRankedProblemLocation.html#method-i-to_hash","()",""],["to_hash","MetricFu::Location","MetricFu/Location.html#method-i-to_hash","()",""],["to_key","MetricFu::Location","MetricFu/Location.html#method-i-to_key","()","<p>Generates the @hash key\n"],["tool_analyzers","MetricFu::HotspotAnalyzer","MetricFu/HotspotAnalyzer.html#method-i-tool_analyzers","()",""],["tool_tables","MetricFu::AnalyzerTables","MetricFu/AnalyzerTables.html#method-i-tool_tables","()",""],["top","MetricFu::Ranking","MetricFu/Ranking.html#method-i-top","()",""],["underscore","MetricFu::Constantize","MetricFu/Constantize.html#method-i-underscore","(camel_cased_word)","<p>Copied from active_support\ngithub.com/rails/rails/blob/51cd6bb829c418c5fbf75de1dfbb177233b1b154/activesupport/lib/active_support/inflector/methods.rb#L88\n…\n"],["unknown_dependency","MetricFu::GemVersion","MetricFu/GemVersion.html#method-i-unknown_dependency","(name)",""],["usage","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-usage","()",""],["verbose","MetricFu::Environment","MetricFu/Environment.html#method-i-verbose","()","<p>TODO: Set log_level here, instead\n"],["verbose=","MetricFu::Environment","MetricFu/Environment.html#method-i-verbose-3D","(toggle)",""],["version","MetricFu::Cli::Helper","MetricFu/Cli/Helper.html#method-i-version","()",""],["version","MetricFu::Environment","MetricFu/Environment.html#method-i-version","()",""],["worst_classes","MetricFu::HotspotRankings","MetricFu/HotspotRankings.html#method-i-worst_classes","()",""],["worst_files","MetricFu::HotspotRankings","MetricFu/HotspotRankings.html#method-i-worst_files","()",""],["worst_items","MetricFu::HotspotAnalyzedProblems","MetricFu/HotspotAnalyzedProblems.html#method-i-worst_items","()",""],["worst_methods","MetricFu::HotspotRankings","MetricFu/HotspotRankings.html#method-i-worst_methods","()",""],["write","AwesomeTemplate","AwesomeTemplate.html#method-i-write","()",""],["write_file_data","AwesomeTemplate","AwesomeTemplate.html#method-i-write_file_data","()",""],["write_output","MetricFu::Io","MetricFu/Io.html#method-i-write_output","(output, path_or_io)","<p>Writes the output to a file or io stream. @param output [String, #to_s] the\ncontent to write. @param …\n"],["write_template","MetricFu::Formatter::HTML","MetricFu/Formatter/HTML.html#method-i-write_template","(output, file)",""],["MIT-LICENSE","","MIT-LICENSE.html","","<p>Copyright © 2008,2009,2010,2011 Jake Scruggs\n<p>Permission is hereby granted, free of charge, to any person …\n"]]}}