var search_data = {"index":{"searchIndex":["autotest","rspec2","kernel","rspec","core","backtracecleaner","backtraceformatter","commandline","configuration","mustbeconfiguredbeforeexamplegroupserror","configurationoptions","constmissing","drbcommandline","dsl","deprecation","drboptions","example","procsy","examplegroup","extensions","instanceevalwithargs","moduleevalwithargs","ordered","examplegroups","examples","filtermanager","backwardcompatibility","describable","formatters","baseformatter","basetextformatter","deprecationformatter","documentationformatter","helpers","htmlformatter","htmlprinter","jsonformatter","progressformatter","snippetextractor","nullconverter","textmateformatter","hooks","afterallhook","afterhook","aroundhook","aroundhookcollection","beforehook","grouphookcollection","hook","hookcollection","hookcollectionaliases","registersglobals","memoizedhelpers","beforeallmemoizedhash","classmethods","metadata","examplemetadatahash","groupmetadatahash","metadatahash","metadatahashbuilder","common","withconfigwarning","withdeprecationwarning","mockframeworkadapter","parser","pending","pendingdeclaredinexample","pendingexamplefixederror","projectinitializer","raketask","reporter","rubyproject","runner","sharedcontext","sharedexamplegroup","collection","registry","topleveldsl","time","version","world","rake","runner","[]()","[]()","[]=()","__shared_context_recordings()","_warn_deprecated_key()","_warn_deprecated_keys()","abort()","add_const()","add_dir_to_load_path()","add_failure_exit_code()","add_filter()","add_formatter()","add_formatters()","add_full_description()","add_group()","add_libs()","add_line_numbers()","add_location()","add_requires()","add_setting()","add_setting()","add_to_load_path()","after()","alias_example_to()","alias_example_to()","alias_it_behaves_like_to()","alias_it_behaves_like_to()","alias_it_should_behave_like_to()","all_apply?()","all_apply?()","all_apply?()","announce_exclusion_filter()","announce_filters()","announce_inclusion_filter()","any_apply?()","any_apply?()","any_apply?()","append_after()","append_before()","around()","around_each_hooks()","around_each_hooks_for()","ascend_until()","assign_before_all_ivars()","autorun()","autorun_disabled?()","backtrace_clean_patterns()","backtrace_clean_patterns=()","backtrace_exclusion_patterns()","backtrace_exclusion_patterns=()","backtrace_inclusion_patterns()","backtrace_inclusion_patterns=()","backtrace_line()","backtrace_line()","before()","before_all_ivars()","blue()","bold()","build_metadata_hash_from()","children()","clear()","clear_remaining_example_groups()","close()","close()","close()","color()","color()","color=()","color_code_for()","color_enabled()","color_enabled=()","color_enabled?()","colorise_summary()","colorize()","configuration()","configuration()","configuration()","configuration=()","configure()","configure()","configure()","configure_expectation_framework()","configure_for_example()","configure_group()","configure_group()","configure_mock_framework()","consolidate_failures()","const_missing()","const_missing()","const_missing()","container_stack()","context()","convert()","convert_deprecated_args()","create_dot_rspec_file()","create_spec_helper_file()","created_from_caller()","current_indentation()","cyan()","debug=()","debug?()","debugger()","declaration_line_numbers()","default_color()","define_aliases()","define_example_method()","define_nested_shared_group_method()","define_predicate_for()","define_reader()","delegate_to_metadata()","delegate_to_metadata()","delete_if_confirmed()","deprecate()","deprecate_alias_key()","deprecation()","deprecation()","deprecation_summary()","descendant_filtered_examples()","descendants()","describe()","describe()","described_class()","described_class()","described_class()","description()","description()","description()","detail_color()","determine_root()","disable_autorun!()","display_name()","display_name()","display_name()","display_name()","display_name()","drb_argv()","drb_port()","dump_commands_to_rerun_failed_examples()","dump_failures()","dump_failures()","dump_failures()","dump_pending()","dump_pending()","dump_pending()","dump_profile()","dump_profile_slowest_example_groups()","dump_profile_slowest_examples()","dump_summary()","dump_summary()","dump_summary()","dump_summary()","empty?()","empty_without_conditional_filters?()","ensure_example_groups_are_configured()","everything_filtered_message()","example_count()","example_failed()","example_failed()","example_failed()","example_failed()","example_failed()","example_group()","example_group_chain()","example_group_finished()","example_group_finished()","example_group_finished()","example_group_number()","example_group_started()","example_group_started()","example_group_started()","example_group_started()","example_number()","example_ordering_block()","example_passed()","example_passed()","example_passed()","example_passed()","example_passed()","example_pending()","example_pending()","example_pending()","example_pending()","example_pending()","example_started()","example_started()","example_started()","examples()","exclude()","exclude!()","exclude?()","exclude?()","exclude_with_low_priority()","exclusion_filter()","exclusion_filter()","exclusion_filter=()","expect_with()","expectation_framework=()","expectation_frameworks()","extend()","extended()","extra_failure_content()","extra_failure_content()","fail_fast?()","fail_fast?()","fail_filtered_examples()","fail_with_exception()","failure_color()","failure_output()","fetch()","fetch()","files_or_directories_to_run=()","filter()","filter=()","filter_applies?()","filter_applies_to_any_value?()","filter_manager()","filter_manager()","filter_run()","filter_run_excluding()","filter_run_including()","filtered_examples()","filters_apply?()","find_and_eval_shared()","find_failed_line()","find_first_parent_containing()","finish()","fixed_color()","flush()","for()","for()","for()","for_example()","force()","format_backtrace()","format_backtrace()","format_backtrace_line_for_textmate()","format_docstrings()","format_docstrings_block()","format_duration()","format_seconds()","formatter=()","formatters()","framework_name()","full_backtrace=()","full_backtrace=()","full_backtrace?()","full_backtrace?()","full_description()","full_description()","full_description()","full_description=()","gemfile=()","green()","group_ordering_block()","hooks()","include()","include()","include!()","include?()","include_context()","include_examples()","include_with_low_priority()","included()","included()","included()","inclusion_filter()","inclusion_filter()","inclusion_filter=()","installed_at_exit?()","instance_eval()","instance_eval_with_args()","instance_eval_with_args()","instance_eval_with_rescue()","instance_eval_with_rescue()","isolate_for_before_all()","its()","let()","let!()","libs=()","line_number_filter_applies?()","line_numbers()","line_numbers=()","lines_around()","load_spec_files()","location_filter_applies?()","long_padding()","magenta()","make_example_group_header_red()","make_example_group_header_yellow()","make_header_red()","make_header_yellow()","make_test_cmd()","merge()","message()","message()","message()","message()","message()","metadata()","mock_framework()","mock_framework=()","mock_with()","module_eval_with_args()","move_progress()","mute_profile_output?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_failure_index()","normalize()","notify()","options()","options()","options_apply?()","order=()","order_examples()","order_groups()","order_groups_and_examples()","ordered()","ordered()","output_supports_sync()","parent_groups()","parse()","parse()","parse!()","parse!()","parse_options()","parser()","passed_output()","pending()","pending_color()","pending_output()","percent_done()","pluralize()","post_process()","preceding_declaration_line()","prepend_after()","prepend_before()","preserve_accessed_lets()","print_example_failed()","print_example_group_end()","print_example_group_start()","print_example_passed()","print_example_pending()","print_html_start()","print_summary()","process()","procsy()","profile_examples()","profile_examples?()","prune()","randomize?()","read_failed_line()","record()","red()","register()","register()","register_globals()","register_listener()","registered_listeners()","registry()","relative_path()","report()","report_creating()","report_exists()","reporter()","reporter()","requires=()","reset()","reset()","reset()","restore_sync_output()","reverse_merge()","root()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_after_all_hooks()","run_after_each_hooks()","run_around_each_hooks()","run_before_all_hooks()","run_before_each_hooks()","run_examples()","run_hook()","run_task()","running_example()","running_in_drb?()","safe_extend()","safe_include()","seed()","seed()","seed=()","set_exception()","set_it_up()","set_ivars()","setup_ivars()","setup_load_path_and_require()","setup_mocks_for_rspec()","setup_rspec_project_mappings()","share_as()","share_as()","share_examples_for()","share_examples_for()","shared_context()","shared_context()","shared_example_groups()","shared_example_groups()","shared_example_groups()","shared_example_groups_for()","shared_examples()","shared_examples()","shared_examples_for()","shared_examples_for()","short_padding()","should()","should()","should_not()","should_not()","skip_bundler=()","snippet()","snippet_for()","spec_opts=()","start()","start()","start()","start()","start_dump()","start_dump()","start_dump()","start_sync_output()","stop()","stop()","stop()","store_before_all_ivars()","strip_trailing_zeroes()","subclass()","subject()","subject()","subject!()","success_color()","summary_line()","summary_line()","superclass_metadata()","teardown_mocks_for_rspec()","top_level?()","top_level_description()","trap_interrupt()","verify_mocks_for_rspec()","wants_to_quit()","wants_to_quit=()","warn_deprecation()","warning=()","warnings()","warnings=()","white()","windows_os?()","with()","with()","with()","world()","world()","world=()","yellow()"],"longSearchIndex":["autotest","autotest::rspec2","kernel","rspec","rspec::core","rspec::core::backtracecleaner","rspec::core::backtraceformatter","rspec::core::commandline","rspec::core::configuration","rspec::core::configuration::mustbeconfiguredbeforeexamplegroupserror","rspec::core::configurationoptions","rspec::core::constmissing","rspec::core::drbcommandline","rspec::core::dsl","rspec::core::deprecation","rspec::core::drboptions","rspec::core::example","rspec::core::example::procsy","rspec::core::examplegroup","rspec::core::extensions","rspec::core::extensions::instanceevalwithargs","rspec::core::extensions::moduleevalwithargs","rspec::core::extensions::ordered","rspec::core::extensions::ordered::examplegroups","rspec::core::extensions::ordered::examples","rspec::core::filtermanager","rspec::core::filtermanager::backwardcompatibility","rspec::core::filtermanager::describable","rspec::core::formatters","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::deprecationformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::helpers","rspec::core::formatters::htmlformatter","rspec::core::formatters::htmlprinter","rspec::core::formatters::jsonformatter","rspec::core::formatters::progressformatter","rspec::core::formatters::snippetextractor","rspec::core::formatters::snippetextractor::nullconverter","rspec::core::formatters::textmateformatter","rspec::core::hooks","rspec::core::hooks::afterallhook","rspec::core::hooks::afterhook","rspec::core::hooks::aroundhook","rspec::core::hooks::aroundhookcollection","rspec::core::hooks::beforehook","rspec::core::hooks::grouphookcollection","rspec::core::hooks::hook","rspec::core::hooks::hookcollection","rspec::core::hooks::hookcollectionaliases","rspec::core::hooks::registersglobals","rspec::core::memoizedhelpers","rspec::core::memoizedhelpers::beforeallmemoizedhash","rspec::core::memoizedhelpers::classmethods","rspec::core::metadata","rspec::core::metadata::examplemetadatahash","rspec::core::metadata::groupmetadatahash","rspec::core::metadata::metadatahash","rspec::core::metadatahashbuilder","rspec::core::metadatahashbuilder::common","rspec::core::metadatahashbuilder::withconfigwarning","rspec::core::metadatahashbuilder::withdeprecationwarning","rspec::core::mockframeworkadapter","rspec::core::parser","rspec::core::pending","rspec::core::pending::pendingdeclaredinexample","rspec::core::pending::pendingexamplefixederror","rspec::core::projectinitializer","rspec::core::raketask","rspec::core::reporter","rspec::core::rubyproject","rspec::core::runner","rspec::core::sharedcontext","rspec::core::sharedexamplegroup","rspec::core::sharedexamplegroup::collection","rspec::core::sharedexamplegroup::registry","rspec::core::sharedexamplegroup::topleveldsl","rspec::core::time","rspec::core::version","rspec::core::world","rspec::rake","rspec::runner","rspec::core::metadata::metadatahash#[]()","rspec::core::sharedexamplegroup::collection#[]()","rspec::core::memoizedhelpers::beforeallmemoizedhash#[]=()","rspec::core::sharedcontext#__shared_context_recordings()","rspec::core::filtermanager::backwardcompatibility#_warn_deprecated_key()","rspec::core::filtermanager::backwardcompatibility#_warn_deprecated_keys()","rspec::core::reporter#abort()","rspec::core::sharedexamplegroup::registry#add_const()","rspec::core::rubyproject::add_dir_to_load_path()","rspec::core::drboptions#add_failure_exit_code()","rspec::core::drboptions#add_filter()","rspec::core::configuration#add_formatter()","rspec::core::drboptions#add_formatters()","rspec::core::drboptions#add_full_description()","rspec::core::sharedexamplegroup::registry#add_group()","rspec::core::drboptions#add_libs()","rspec::core::drboptions#add_line_numbers()","rspec::core::filtermanager#add_location()","rspec::core::drboptions#add_requires()","rspec::core::configuration#add_setting()","rspec::core::configuration::add_setting()","rspec::core::rubyproject::add_to_load_path()","rspec::core::hooks#after()","rspec::core::configuration#alias_example_to()","rspec::core::examplegroup::alias_example_to()","rspec::core::configuration#alias_it_behaves_like_to()","rspec::core::examplegroup::alias_it_behaves_like_to()","rspec::core::configuration#alias_it_should_behave_like_to()","rspec::core::example#all_apply?()","rspec::core::examplegroup::all_apply?()","rspec::core::metadata#all_apply?()","rspec::core::world#announce_exclusion_filter()","rspec::core::world#announce_filters()","rspec::core::world#announce_inclusion_filter()","rspec::core::example#any_apply?()","rspec::core::examplegroup::any_apply?()","rspec::core::metadata#any_apply?()","rspec::core::hooks#append_after()","rspec::core::hooks#append_before()","rspec::core::hooks#around()","rspec::core::example#around_each_hooks()","rspec::core::hooks#around_each_hooks_for()","rspec::core::rubyproject::ascend_until()","rspec::core::examplegroup::assign_before_all_ivars()","rspec::core::runner::autorun()","rspec::core::runner::autorun_disabled?()","rspec::core::configuration#backtrace_clean_patterns()","rspec::core::configuration#backtrace_clean_patterns=()","rspec::core::configuration#backtrace_exclusion_patterns()","rspec::core::configuration#backtrace_exclusion_patterns=()","rspec::core::configuration#backtrace_inclusion_patterns()","rspec::core::configuration#backtrace_inclusion_patterns=()","rspec::core::backtraceformatter#backtrace_line()","rspec::core::formatters::textmateformatter#backtrace_line()","rspec::core::hooks#before()","rspec::core::examplegroup::before_all_ivars()","rspec::core::formatters::basetextformatter#blue()","rspec::core::formatters::basetextformatter#bold()","rspec::core::metadatahashbuilder::common#build_metadata_hash_from()","rspec::core::examplegroup::children()","rspec::core::sharedexamplegroup::registry#clear()","rspec::clear_remaining_example_groups()","rspec::core::formatters::baseformatter#close()","rspec::core::formatters::basetextformatter#close()","rspec::core::formatters::jsonformatter#close()","rspec::core::configuration#color()","rspec::core::formatters::basetextformatter#color()","rspec::core::configuration#color=()","rspec::core::formatters::basetextformatter#color_code_for()","rspec::core::configuration#color_enabled()","rspec::core::configuration#color_enabled=()","rspec::core::formatters::baseformatter#color_enabled?()","rspec::core::formatters::basetextformatter#colorise_summary()","rspec::core::formatters::basetextformatter#colorize()","rspec::configuration()","rspec::core::formatters::baseformatter#configuration()","rspec::core::mockframeworkadapter::configuration()","rspec::configuration=()","rspec::configure()","rspec::core::configurationoptions#configure()","rspec::runner::configure()","rspec::core::configuration#configure_expectation_framework()","rspec::core::metadata#configure_for_example()","rspec::core::configuration#configure_group()","rspec::core::world#configure_group()","rspec::core::configuration#configure_mock_framework()","autotest::rspec2#consolidate_failures()","rspec::const_missing()","rspec::core::constmissing#const_missing()","rspec::rake::const_missing()","rspec::core::metadata::groupmetadatahash#container_stack()","rspec::core::examplegroup::context()","rspec::core::formatters::snippetextractor::nullconverter#convert()","rspec::core::parser#convert_deprecated_args()","rspec::core::projectinitializer#create_dot_rspec_file()","rspec::core::projectinitializer#create_spec_helper_file()","rspec::core::sharedexamplegroup::registry::created_from_caller()","rspec::core::formatters::documentationformatter#current_indentation()","rspec::core::formatters::basetextformatter#cyan()","rspec::core::configuration#debug=()","rspec::core::configuration#debug?()","kernel#debugger()","rspec::core::examplegroup::declaration_line_numbers()","rspec::core::formatters::basetextformatter#default_color()","rspec::core::configuration::define_aliases()","rspec::core::examplegroup::define_example_method()","rspec::core::examplegroup::define_nested_shared_group_method()","rspec::core::configuration::define_predicate_for()","rspec::core::configuration::define_reader()","rspec::core::example::delegate_to_metadata()","rspec::core::examplegroup::delegate_to_metadata()","rspec::core::projectinitializer#delete_if_confirmed()","rspec::core::deprecation#deprecate()","rspec::core::configuration::deprecate_alias_key()","rspec::core::formatters::deprecationformatter#deprecation()","rspec::core::reporter#deprecation()","rspec::core::formatters::deprecationformatter#deprecation_summary()","rspec::core::examplegroup::descendant_filtered_examples()","rspec::core::examplegroup::descendants()","rspec::core::dsl#describe()","rspec::core::examplegroup::describe()","rspec::core::examplegroup#described_class()","rspec::core::metadata::examplemetadatahash#described_class()","rspec::core::metadata::groupmetadatahash#described_class()","rspec::core::example#description()","rspec::core::examplegroup::description()","rspec::core::filtermanager::describable#description()","rspec::core::formatters::basetextformatter#detail_color()","rspec::core::rubyproject::determine_root()","rspec::core::runner::disable_autorun!()","rspec::core::examplegroup::display_name()","rspec::core::hooks::afterallhook#display_name()","rspec::core::hooks::afterhook#display_name()","rspec::core::hooks::aroundhook#display_name()","rspec::core::hooks::beforehook#display_name()","rspec::core::configurationoptions#drb_argv()","rspec::core::drbcommandline#drb_port()","rspec::core::formatters::basetextformatter#dump_commands_to_rerun_failed_examples()","rspec::core::formatters::baseformatter#dump_failures()","rspec::core::formatters::basetextformatter#dump_failures()","rspec::core::formatters::htmlformatter#dump_failures()","rspec::core::formatters::baseformatter#dump_pending()","rspec::core::formatters::basetextformatter#dump_pending()","rspec::core::formatters::htmlformatter#dump_pending()","rspec::core::formatters::basetextformatter#dump_profile()","rspec::core::formatters::basetextformatter#dump_profile_slowest_example_groups()","rspec::core::formatters::basetextformatter#dump_profile_slowest_examples()","rspec::core::formatters::baseformatter#dump_summary()","rspec::core::formatters::basetextformatter#dump_summary()","rspec::core::formatters::htmlformatter#dump_summary()","rspec::core::formatters::jsonformatter#dump_summary()","rspec::core::filtermanager#empty?()","rspec::core::filtermanager::describable#empty_without_conditional_filters?()","rspec::core::examplegroup::ensure_example_groups_are_configured()","rspec::core::world#everything_filtered_message()","rspec::core::world#example_count()","rspec::core::formatters::baseformatter#example_failed()","rspec::core::formatters::documentationformatter#example_failed()","rspec::core::formatters::htmlformatter#example_failed()","rspec::core::formatters::progressformatter#example_failed()","rspec::core::reporter#example_failed()","rspec::core::example#example_group()","rspec::core::formatters::documentationformatter#example_group_chain()","rspec::core::formatters::baseformatter#example_group_finished()","rspec::core::formatters::documentationformatter#example_group_finished()","rspec::core::reporter#example_group_finished()","rspec::core::formatters::htmlformatter#example_group_number()","rspec::core::formatters::baseformatter#example_group_started()","rspec::core::formatters::documentationformatter#example_group_started()","rspec::core::formatters::htmlformatter#example_group_started()","rspec::core::reporter#example_group_started()","rspec::core::formatters::htmlformatter#example_number()","rspec::core::configuration#example_ordering_block()","rspec::core::formatters::baseformatter#example_passed()","rspec::core::formatters::documentationformatter#example_passed()","rspec::core::formatters::htmlformatter#example_passed()","rspec::core::formatters::progressformatter#example_passed()","rspec::core::reporter#example_passed()","rspec::core::formatters::baseformatter#example_pending()","rspec::core::formatters::documentationformatter#example_pending()","rspec::core::formatters::htmlformatter#example_pending()","rspec::core::formatters::progressformatter#example_pending()","rspec::core::reporter#example_pending()","rspec::core::formatters::baseformatter#example_started()","rspec::core::formatters::htmlformatter#example_started()","rspec::core::reporter#example_started()","rspec::core::examplegroup::examples()","rspec::core::filtermanager#exclude()","rspec::core::filtermanager#exclude!()","rspec::core::backtracecleaner#exclude?()","rspec::core::filtermanager#exclude?()","rspec::core::filtermanager#exclude_with_low_priority()","rspec::core::configuration#exclusion_filter()","rspec::core::world#exclusion_filter()","rspec::core::configuration#exclusion_filter=()","rspec::core::configuration#expect_with()","rspec::core::configuration#expectation_framework=()","rspec::core::configuration#expectation_frameworks()","rspec::core::configuration#extend()","rspec::core::example::procsy::extended()","rspec::core::formatters::htmlformatter#extra_failure_content()","rspec::core::formatters::textmateformatter#extra_failure_content()","rspec::core::examplegroup::fail_fast?()","rspec::core::formatters::baseformatter#fail_fast?()","rspec::core::examplegroup::fail_filtered_examples()","rspec::core::example#fail_with_exception()","rspec::core::formatters::basetextformatter#failure_color()","rspec::core::formatters::documentationformatter#failure_output()","rspec::core::memoizedhelpers::beforeallmemoizedhash#fetch()","rspec::core::metadata::metadatahash#fetch()","rspec::core::configuration#files_or_directories_to_run=()","rspec::core::configuration#filter()","rspec::core::configuration#filter=()","rspec::core::metadata#filter_applies?()","rspec::core::metadata#filter_applies_to_any_value?()","rspec::core::configurationoptions#filter_manager()","rspec::core::world#filter_manager()","rspec::core::configuration#filter_run()","rspec::core::configuration#filter_run_excluding()","rspec::core::configuration#filter_run_including()","rspec::core::examplegroup::filtered_examples()","rspec::core::metadata#filters_apply?()","rspec::core::examplegroup::find_and_eval_shared()","rspec::core::formatters::baseformatter#find_failed_line()","rspec::core::rubyproject::find_first_parent_containing()","rspec::core::reporter#finish()","rspec::core::formatters::basetextformatter#fixed_color()","rspec::core::formatters::htmlprinter#flush()","rspec::core::hooks::aroundhookcollection#for()","rspec::core::hooks::grouphookcollection#for()","rspec::core::hooks::hookcollection#for()","rspec::core::metadata#for_example()","rspec::core::configuration#force()","rspec::core::backtraceformatter#format_backtrace()","rspec::core::formatters::baseformatter#format_backtrace()","rspec::core::formatters::textmateformatter#format_backtrace_line_for_textmate()","rspec::core::configuration#format_docstrings()","rspec::core::configuration#format_docstrings_block()","rspec::core::formatters::helpers#format_duration()","rspec::core::formatters::helpers#format_seconds()","rspec::core::configuration#formatter=()","rspec::core::configuration#formatters()","rspec::core::mockframeworkadapter::framework_name()","rspec::core::backtracecleaner#full_backtrace=()","rspec::core::configuration#full_backtrace=()","rspec::core::backtracecleaner#full_backtrace?()","rspec::core::configuration#full_backtrace?()","rspec::core::configuration#full_description()","rspec::core::metadata::examplemetadatahash#full_description()","rspec::core::metadata::groupmetadatahash#full_description()","rspec::core::configuration#full_description=()","rspec::core::raketask#gemfile=()","rspec::core::formatters::basetextformatter#green()","rspec::core::configuration#group_ordering_block()","rspec::core::hooks#hooks()","rspec::core::configuration#include()","rspec::core::filtermanager#include()","rspec::core::filtermanager#include!()","rspec::core::filtermanager#include?()","rspec::core::examplegroup::include_context()","rspec::core::examplegroup::include_examples()","rspec::core::filtermanager#include_with_low_priority()","rspec::core::hooks::hookcollectionaliases::included()","rspec::core::sharedcontext#included()","rspec::core::sharedexamplegroup::registry::included()","rspec::core::configuration#inclusion_filter()","rspec::core::world#inclusion_filter()","rspec::core::configuration#inclusion_filter=()","rspec::core::runner::installed_at_exit?()","rspec::core::example#instance_eval()","rspec::core::example#instance_eval_with_args()","rspec::core::extensions::instanceevalwithargs#instance_eval_with_args()","rspec::core::example#instance_eval_with_rescue()","rspec::core::examplegroup#instance_eval_with_rescue()","rspec::core::memoizedhelpers::beforeallmemoizedhash::isolate_for_before_all()","rspec::core::memoizedhelpers::classmethods#its()","rspec::core::memoizedhelpers::classmethods#let()","rspec::core::memoizedhelpers::classmethods#let!()","rspec::core::configuration#libs=()","rspec::core::metadata#line_number_filter_applies?()","rspec::core::configuration#line_numbers()","rspec::core::configuration#line_numbers=()","rspec::core::formatters::snippetextractor#lines_around()","rspec::core::configuration#load_spec_files()","rspec::core::metadata#location_filter_applies?()","rspec::core::formatters::basetextformatter#long_padding()","rspec::core::formatters::basetextformatter#magenta()","rspec::core::formatters::htmlprinter#make_example_group_header_red()","rspec::core::formatters::htmlprinter#make_example_group_header_yellow()","rspec::core::formatters::htmlprinter#make_header_red()","rspec::core::formatters::htmlprinter#make_header_yellow()","autotest::rspec2#make_test_cmd()","rspec::core::filtermanager::backwardcompatibility#merge()","rspec::core::formatters::baseformatter#message()","rspec::core::formatters::basetextformatter#message()","rspec::core::formatters::htmlformatter#message()","rspec::core::formatters::jsonformatter#message()","rspec::core::reporter#message()","rspec::core::examplegroup::metadata()","rspec::core::configuration#mock_framework()","rspec::core::configuration#mock_framework=()","rspec::core::configuration#mock_with()","rspec::core::extensions::moduleevalwithargs#module_eval_with_args()","rspec::core::formatters::htmlprinter#move_progress()","rspec::core::formatters::baseformatter#mute_profile_output?()","autotest::rspec2::new()","rspec::core::backtracecleaner::new()","rspec::core::commandline::new()","rspec::core::configuration::new()","rspec::core::configurationoptions::new()","rspec::core::drbcommandline::new()","rspec::core::drboptions::new()","rspec::core::example::new()","rspec::core::filtermanager::new()","rspec::core::formatters::baseformatter::new()","rspec::core::formatters::deprecationformatter::new()","rspec::core::formatters::documentationformatter::new()","rspec::core::formatters::htmlformatter::new()","rspec::core::formatters::htmlprinter::new()","rspec::core::formatters::jsonformatter::new()","rspec::core::hooks::hook::new()","rspec::core::memoizedhelpers::beforeallmemoizedhash::new()","rspec::core::metadata::new()","rspec::core::projectinitializer::new()","rspec::core::raketask::new()","rspec::core::reporter::new()","rspec::core::sharedexamplegroup::collection::new()","rspec::core::world::new()","rspec::core::formatters::documentationformatter#next_failure_index()","autotest::rspec2#normalize()","rspec::core::reporter#notify()","rspec::core::drboptions#options()","rspec::core::example#options()","rspec::core::hooks::hook#options_apply?()","rspec::core::configuration#order=()","rspec::core::configuration#order_examples()","rspec::core::configuration#order_groups()","rspec::core::configuration#order_groups_and_examples()","rspec::core::extensions::ordered::examplegroups#ordered()","rspec::core::extensions::ordered::examples#ordered()","rspec::core::formatters::baseformatter#output_supports_sync()","rspec::core::examplegroup::parent_groups()","rspec::core::parser::parse()","rspec::core::parser#parse()","rspec::core::parser#parse!()","rspec::core::parser::parse!()","rspec::core::configurationoptions#parse_options()","rspec::core::parser#parser()","rspec::core::formatters::documentationformatter#passed_output()","rspec::core::pending#pending()","rspec::core::formatters::basetextformatter#pending_color()","rspec::core::formatters::documentationformatter#pending_output()","rspec::core::formatters::htmlformatter#percent_done()","rspec::core::formatters::helpers#pluralize()","rspec::core::formatters::snippetextractor#post_process()","rspec::core::world#preceding_declaration_line()","rspec::core::hooks#prepend_after()","rspec::core::hooks#prepend_before()","rspec::core::memoizedhelpers::beforeallmemoizedhash#preserve_accessed_lets()","rspec::core::formatters::htmlprinter#print_example_failed()","rspec::core::formatters::htmlprinter#print_example_group_end()","rspec::core::formatters::htmlprinter#print_example_group_start()","rspec::core::formatters::htmlprinter#print_example_passed()","rspec::core::formatters::htmlprinter#print_example_pending()","rspec::core::formatters::htmlprinter#print_html_start()","rspec::core::formatters::htmlprinter#print_summary()","rspec::core::metadata#process()","rspec::core::example::procsy()","rspec::core::configuration#profile_examples()","rspec::core::formatters::baseformatter#profile_examples?()","rspec::core::filtermanager#prune()","rspec::core::configuration#randomize?()","rspec::core::formatters::baseformatter#read_failed_line()","rspec::core::sharedcontext::record()","rspec::core::formatters::basetextformatter#red()","rspec::core::examplegroup::register()","rspec::core::world#register()","rspec::core::hooks::registersglobals#register_globals()","rspec::core::reporter#register_listener()","rspec::core::reporter#registered_listeners()","rspec::core::sharedexamplegroup::registry()","rspec::core::metadata::relative_path()","rspec::core::reporter#report()","rspec::core::projectinitializer#report_creating()","rspec::core::projectinitializer#report_exists()","rspec::core::configuration#reporter()","rspec::core::world#reporter()","rspec::core::configuration#requires=()","rspec::reset()","rspec::core::configuration#reset()","rspec::core::world#reset()","rspec::core::formatters::baseformatter#restore_sync_output()","rspec::core::filtermanager::backwardcompatibility#reverse_merge()","rspec::core::rubyproject::root()","rspec::core::commandline#run()","rspec::core::drbcommandline#run()","rspec::core::example#run()","rspec::core::examplegroup::run()","rspec::core::hooks::afterallhook#run()","rspec::core::hooks::afterhook#run()","rspec::core::hooks::aroundhookcollection#run()","rspec::core::hooks::beforehook#run()","rspec::core::hooks::grouphookcollection#run()","rspec::core::hooks::hookcollection#run()","rspec::core::projectinitializer#run()","rspec::core::runner::run()","rspec::core::examplegroup::run_after_all_hooks()","rspec::core::examplegroup::run_after_each_hooks()","rspec::core::examplegroup::run_around_each_hooks()","rspec::core::examplegroup::run_before_all_hooks()","rspec::core::examplegroup::run_before_each_hooks()","rspec::core::examplegroup::run_examples()","rspec::core::hooks#run_hook()","rspec::core::raketask#run_task()","rspec::core::examplegroup#running_example()","rspec::core::runner::running_in_drb?()","rspec::core::configuration#safe_extend()","rspec::core::configuration#safe_include()","rspec::core::formatters::baseformatter#seed()","rspec::core::formatters::basetextformatter#seed()","rspec::core::configuration#seed=()","rspec::core::example#set_exception()","rspec::core::examplegroup::set_it_up()","rspec::core::examplegroup::set_ivars()","rspec::core::raketask#setup_ivars()","rspec::core::configuration#setup_load_path_and_require()","rspec::core::mockframeworkadapter#setup_mocks_for_rspec()","autotest::rspec2#setup_rspec_project_mappings()","rspec::core::sharedexamplegroup#share_as()","rspec::core::sharedexamplegroup::topleveldsl#share_as()","rspec::core::sharedexamplegroup#share_examples_for()","rspec::core::sharedexamplegroup::topleveldsl#share_examples_for()","rspec::core::sharedexamplegroup#shared_context()","rspec::core::sharedexamplegroup::topleveldsl#shared_context()","rspec::core::sharedexamplegroup#shared_example_groups()","rspec::core::sharedexamplegroup::registry#shared_example_groups()","rspec::core::sharedexamplegroup::topleveldsl#shared_example_groups()","rspec::core::sharedexamplegroup::registry#shared_example_groups_for()","rspec::core::sharedexamplegroup#shared_examples()","rspec::core::sharedexamplegroup::topleveldsl#shared_examples()","rspec::core::sharedexamplegroup#shared_examples_for()","rspec::core::sharedexamplegroup::topleveldsl#shared_examples_for()","rspec::core::formatters::basetextformatter#short_padding()","rspec::core::memoizedhelpers#should()","rspec::core::memoizedhelpers::classmethods#should()","rspec::core::memoizedhelpers#should_not()","rspec::core::memoizedhelpers::classmethods#should_not()","rspec::core::raketask#skip_bundler=()","rspec::core::formatters::snippetextractor#snippet()","rspec::core::formatters::snippetextractor#snippet_for()","rspec::core::raketask#spec_opts=()","rspec::core::formatters::baseformatter#start()","rspec::core::formatters::deprecationformatter#start()","rspec::core::formatters::htmlformatter#start()","rspec::core::reporter#start()","rspec::core::formatters::baseformatter#start_dump()","rspec::core::formatters::htmlformatter#start_dump()","rspec::core::formatters::progressformatter#start_dump()","rspec::core::formatters::baseformatter#start_sync_output()","rspec::core::formatters::baseformatter#stop()","rspec::core::formatters::jsonformatter#stop()","rspec::core::reporter#stop()","rspec::core::examplegroup::store_before_all_ivars()","rspec::core::formatters::helpers#strip_trailing_zeroes()","rspec::core::examplegroup::subclass()","rspec::core::memoizedhelpers#subject()","rspec::core::memoizedhelpers::classmethods#subject()","rspec::core::memoizedhelpers::classmethods#subject!()","rspec::core::formatters::basetextformatter#success_color()","rspec::core::formatters::basetextformatter#summary_line()","rspec::core::formatters::jsonformatter#summary_line()","rspec::core::examplegroup::superclass_metadata()","rspec::core::mockframeworkadapter#teardown_mocks_for_rspec()","rspec::core::examplegroup::top_level?()","rspec::core::examplegroup::top_level_description()","rspec::core::runner::trap_interrupt()","rspec::core::mockframeworkadapter#verify_mocks_for_rspec()","rspec::wants_to_quit()","rspec::wants_to_quit=()","rspec::core::deprecation#warn_deprecation()","rspec::core::raketask#warning=()","rspec::core::configuration#warnings()","rspec::core::configuration#warnings=()","rspec::core::formatters::basetextformatter#white()","rspec::windows_os?()","rspec::core::example::procsy#with()","rspec::core::hooks::aroundhookcollection#with()","rspec::core::hooks::hookcollection#with()","rspec::world()","rspec::core::examplegroup::world()","rspec::world=()","rspec::core::formatters::basetextformatter#yellow()"],"info":[["Autotest","","Autotest.html","",""],["Autotest::Rspec2","","Autotest/Rspec2.html","","<p>Derived from the `Autotest` class, extends the `autotest` command to work\nwith RSpec.\n<p>@note this will …\n"],["Kernel","","Kernel.html","",""],["RSpec","","RSpec.html","",""],["RSpec::Core","","RSpec/Core.html","","<p>Builds command line arguments to pass to the rspec command over DRb\n"],["RSpec::Core::BacktraceCleaner","","RSpec/Core/BacktraceCleaner.html","",""],["RSpec::Core::BacktraceFormatter","","RSpec/Core/BacktraceFormatter.html","",""],["RSpec::Core::CommandLine","","RSpec/Core/CommandLine.html","",""],["RSpec::Core::Configuration","","RSpec/Core/Configuration.html","","<p>Stores runtime configuration information.\n<p>Configuration options are loaded from `~/.rspec`, `.rspec`, …\n"],["RSpec::Core::Configuration::MustBeConfiguredBeforeExampleGroupsError","","RSpec/Core/Configuration/MustBeConfiguredBeforeExampleGroupsError.html","",""],["RSpec::Core::ConfigurationOptions","","RSpec/Core/ConfigurationOptions.html","","<p>@private\n"],["RSpec::Core::ConstMissing","","RSpec/Core/ConstMissing.html","","<p>@private\n"],["RSpec::Core::DRbCommandLine","","RSpec/Core/DRbCommandLine.html","",""],["RSpec::Core::DSL","","RSpec/Core/DSL.html","","<p>Adds the `describe` method to the top-level namespace.\n"],["RSpec::Core::Deprecation","","RSpec/Core/Deprecation.html","",""],["RSpec::Core::DrbOptions","","RSpec/Core/DrbOptions.html","","<p>@private\n"],["RSpec::Core::Example","","RSpec/Core/Example.html","","<p>Wrapper for an instance of a subclass of {ExampleGroup}. An instance of\n`Example` is returned by the …\n"],["RSpec::Core::Example::Procsy","","RSpec/Core/Example/Procsy.html","","<p>Used to extend a `Proc` with behavior that makes it look something like an\n{Example} in an {Hooks#around …\n"],["RSpec::Core::ExampleGroup","","RSpec/Core/ExampleGroup.html","","<p>ExampleGroup and {Example} are the main structural elements of rspec-core. \nConsider this example:\n\n<pre>describe ...</pre>\n"],["RSpec::Core::Extensions","","RSpec/Core/Extensions.html","","<p>@private\n"],["RSpec::Core::Extensions::InstanceEvalWithArgs","","RSpec/Core/Extensions/InstanceEvalWithArgs.html","","<p>@private\n"],["RSpec::Core::Extensions::ModuleEvalWithArgs","","RSpec/Core/Extensions/ModuleEvalWithArgs.html","","<p>@private\n"],["RSpec::Core::Extensions::Ordered","","RSpec/Core/Extensions/Ordered.html","","<p>@private Used to extend lists of examples and groups to support ordering\nstrategies like randomization. …\n"],["RSpec::Core::Extensions::Ordered::ExampleGroups","","RSpec/Core/Extensions/Ordered/ExampleGroups.html","","<p>@private\n"],["RSpec::Core::Extensions::Ordered::Examples","","RSpec/Core/Extensions/Ordered/Examples.html","","<p>@private\n"],["RSpec::Core::FilterManager","","RSpec/Core/FilterManager.html","","<p>Manages the filtering of examples and groups by matching tags declared on\nthe command line or options …\n"],["RSpec::Core::FilterManager::BackwardCompatibility","","RSpec/Core/FilterManager/BackwardCompatibility.html","",""],["RSpec::Core::FilterManager::Describable","","RSpec/Core/FilterManager/Describable.html","",""],["RSpec::Core::Formatters","","RSpec/Core/Formatters.html","","<p>## Built-in Formatters\n<p>progress (default) - prints dots for passing examples, `F` for failures,\n`*` for …\n"],["RSpec::Core::Formatters::BaseFormatter","","RSpec/Core/Formatters/BaseFormatter.html","","<p>RSpec’s built-in formatters are all subclasses of\nRSpec::Core::Formatters::BaseTextFormatter, but the …\n"],["RSpec::Core::Formatters::BaseTextFormatter","","RSpec/Core/Formatters/BaseTextFormatter.html","","<p>Base for all of RSpec’s built-in formatters. See\nRSpec::Core::Formatters::BaseFormatter to learn more …\n"],["RSpec::Core::Formatters::DeprecationFormatter","","RSpec/Core/Formatters/DeprecationFormatter.html","",""],["RSpec::Core::Formatters::DocumentationFormatter","","RSpec/Core/Formatters/DocumentationFormatter.html","",""],["RSpec::Core::Formatters::Helpers","","RSpec/Core/Formatters/Helpers.html","",""],["RSpec::Core::Formatters::HtmlFormatter","","RSpec/Core/Formatters/HtmlFormatter.html","",""],["RSpec::Core::Formatters::HtmlPrinter","","RSpec/Core/Formatters/HtmlPrinter.html","",""],["RSpec::Core::Formatters::JsonFormatter","","RSpec/Core/Formatters/JsonFormatter.html","",""],["RSpec::Core::Formatters::ProgressFormatter","","RSpec/Core/Formatters/ProgressFormatter.html","",""],["RSpec::Core::Formatters::SnippetExtractor","","RSpec/Core/Formatters/SnippetExtractor.html","","<p>@api private\n<p>Extracts code snippets by looking at the backtrace of the passed error and\napplies synax …\n"],["RSpec::Core::Formatters::SnippetExtractor::NullConverter","","RSpec/Core/Formatters/SnippetExtractor/NullConverter.html","",""],["RSpec::Core::Formatters::TextMateFormatter","","RSpec/Core/Formatters/TextMateFormatter.html","","<p>Formats backtraces so they’re clickable by TextMate\n"],["RSpec::Core::Hooks","","RSpec/Core/Hooks.html","",""],["RSpec::Core::Hooks::AfterAllHook","","RSpec/Core/Hooks/AfterAllHook.html","",""],["RSpec::Core::Hooks::AfterHook","","RSpec/Core/Hooks/AfterHook.html","",""],["RSpec::Core::Hooks::AroundHook","","RSpec/Core/Hooks/AroundHook.html","",""],["RSpec::Core::Hooks::AroundHookCollection","","RSpec/Core/Hooks/AroundHookCollection.html","",""],["RSpec::Core::Hooks::BeforeHook","","RSpec/Core/Hooks/BeforeHook.html","",""],["RSpec::Core::Hooks::GroupHookCollection","","RSpec/Core/Hooks/GroupHookCollection.html","",""],["RSpec::Core::Hooks::Hook","","RSpec/Core/Hooks/Hook.html","",""],["RSpec::Core::Hooks::HookCollection","","RSpec/Core/Hooks/HookCollection.html","",""],["RSpec::Core::Hooks::HookCollectionAliases","","RSpec/Core/Hooks/HookCollectionAliases.html","",""],["RSpec::Core::Hooks::RegistersGlobals","","RSpec/Core/Hooks/RegistersGlobals.html","",""],["RSpec::Core::MemoizedHelpers","","RSpec/Core/MemoizedHelpers.html","",""],["RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html","","<p>Used internally to customize the behavior of the memoized hash when used in\na `before(:all)` hook.\n<p>@private …\n"],["RSpec::Core::MemoizedHelpers::ClassMethods","","RSpec/Core/MemoizedHelpers/ClassMethods.html","",""],["RSpec::Core::Metadata","","RSpec/Core/Metadata.html","","<p>Each ExampleGroup class and Example instance owns an instance of Metadata,\nwhich is Hash extended to …\n"],["RSpec::Core::Metadata::ExampleMetadataHash","","RSpec/Core/Metadata/ExampleMetadataHash.html","","<p>Mixed in to Metadata for an Example (extends MetadataHash) to support lazy\nevaluation of some values. …\n"],["RSpec::Core::Metadata::GroupMetadataHash","","RSpec/Core/Metadata/GroupMetadataHash.html","","<p>Mixed in to Metadata for an ExampleGroup (extends MetadataHash) to support\nlazy evaluation of some values. …\n"],["RSpec::Core::Metadata::MetadataHash","","RSpec/Core/Metadata/MetadataHash.html","","<p>@private\n"],["RSpec::Core::MetadataHashBuilder","","RSpec/Core/MetadataHashBuilder.html","","<p>@private\n"],["RSpec::Core::MetadataHashBuilder::Common","","RSpec/Core/MetadataHashBuilder/Common.html","","<p>@private\n"],["RSpec::Core::MetadataHashBuilder::WithConfigWarning","","RSpec/Core/MetadataHashBuilder/WithConfigWarning.html","","<p>@private\n"],["RSpec::Core::MetadataHashBuilder::WithDeprecationWarning","","RSpec/Core/MetadataHashBuilder/WithDeprecationWarning.html","","<p>@private\n"],["RSpec::Core::MockFrameworkAdapter","","RSpec/Core/MockFrameworkAdapter.html","",""],["RSpec::Core::Parser","","RSpec/Core/Parser.html","",""],["RSpec::Core::Pending","","RSpec/Core/Pending.html","",""],["RSpec::Core::Pending::PendingDeclaredInExample","","RSpec/Core/Pending/PendingDeclaredInExample.html","",""],["RSpec::Core::Pending::PendingExampleFixedError","","RSpec/Core/Pending/PendingExampleFixedError.html","",""],["RSpec::Core::ProjectInitializer","","RSpec/Core/ProjectInitializer.html","",""],["RSpec::Core::RakeTask","","RSpec/Core/RakeTask.html","",""],["RSpec::Core::Reporter","","RSpec/Core/Reporter.html","",""],["RSpec::Core::RubyProject","","RSpec/Core/RubyProject.html","",""],["RSpec::Core::Runner","","RSpec/Core/Runner.html","",""],["RSpec::Core::SharedContext","","RSpec/Core/SharedContext.html","","<p>Exposes {ExampleGroup}-level methods to a module, so you can include that\nmodule in an {ExampleGroup}. …\n"],["RSpec::Core::SharedExampleGroup","","RSpec/Core/SharedExampleGroup.html","",""],["RSpec::Core::SharedExampleGroup::Collection","","RSpec/Core/SharedExampleGroup/Collection.html","",""],["RSpec::Core::SharedExampleGroup::Registry","","RSpec/Core/SharedExampleGroup/Registry.html","","<p>@private\n<p>Used internally to manage the shared example groups and constants. We want\nto limit the number …\n"],["RSpec::Core::SharedExampleGroup::TopLevelDSL","","RSpec/Core/SharedExampleGroup/TopLevelDSL.html","",""],["RSpec::Core::Time","","RSpec/Core/Time.html","","<p>@private This avoids issues with reporting time caused by examples that\nchange the value/meaning of  …\n"],["RSpec::Core::Version","","RSpec/Core/Version.html","",""],["RSpec::Core::World","","RSpec/Core/World.html","",""],["RSpec::Rake","","RSpec/Rake.html","","<p>@private\n"],["RSpec::Runner","","RSpec/Runner.html","",""],["[]","RSpec::Core::Metadata::MetadataHash","RSpec/Core/Metadata/MetadataHash.html#method-i-5B-5D","(key)","<p>@private Supports lazy evaluation of some values. Extended by\nExampleMetadataHash and GroupMetadataHash …\n"],["[]","RSpec::Core::SharedExampleGroup::Collection","RSpec/Core/SharedExampleGroup/Collection.html#method-i-5B-5D","(key)",""],["[]=","RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html#method-i-5B-5D-3D","(key, value)",""],["__shared_context_recordings","RSpec::Core::SharedContext","RSpec/Core/SharedContext.html#method-i-__shared_context_recordings","()","<p>@api private\n"],["_warn_deprecated_key","RSpec::Core::FilterManager::BackwardCompatibility","RSpec/Core/FilterManager/BackwardCompatibility.html#method-i-_warn_deprecated_key","(key, updates)","<p>Emits a deprecation warning for keys that will not be supported in the\nfuture.\n"],["_warn_deprecated_keys","RSpec::Core::FilterManager::BackwardCompatibility","RSpec/Core/FilterManager/BackwardCompatibility.html#method-i-_warn_deprecated_keys","(updates)","<p>Supports a use case that probably doesn’t exist: overriding the if/unless\nprocs.\n"],["abort","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-abort","(seed)",""],["add_const","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-i-add_const","(source, name, &block)",""],["add_dir_to_load_path","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-add_dir_to_load_path","(dir)",""],["add_failure_exit_code","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_failure_exit_code","(argv)",""],["add_filter","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_filter","(argv, name, hash)",""],["add_formatter","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-add_formatter","(formatter_to_use, *paths)","<p>@overload add_formatter(formatter)\n<p>Adds a formatter to the formatters collection. `formatter` can be a …\n"],["add_formatters","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_formatters","(argv)",""],["add_full_description","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_full_description","(argv)",""],["add_group","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-i-add_group","(source, *args, &block)",""],["add_libs","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_libs","(argv)",""],["add_line_numbers","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_line_numbers","(argv)",""],["add_location","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-add_location","(file_path, line_numbers)",""],["add_requires","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-add_requires","(argv)",""],["add_setting","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-add_setting","(name, opts={})","<p>@overload add_setting(name) @overload add_setting(name, opts) @option opts\n[Symbol] :default\n\n<pre>set a default ...</pre>\n"],["add_setting","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-add_setting","(name, opts={})","<p>@private\n<p>Invoked by the `add_setting` instance method. Use that method on a\n`Configuration` instance rather …\n"],["add_to_load_path","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-add_to_load_path","(*dirs)",""],["after","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-after","(*args, &block)","<p>@api public @overload after(&amp;block) @overload after(scope, &amp;block)\n@overload after(scope, conditions, …\n"],["alias_example_to","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-alias_example_to","(new_name, *args)","<p>Creates a method that delegates to `example` including the submitted\n`args`. Used internally to add variants …\n"],["alias_example_to","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-alias_example_to","(name, extra={})","<p>Works like `alias_method :name, :example` with the added benefit of\nassigning default metadata to the …\n"],["alias_it_behaves_like_to","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-alias_it_behaves_like_to","(new_name, report_label = '')","<p>Define an alias for it_should_behave_like that allows different language\n(like “it_has_behavior …\n"],["alias_it_behaves_like_to","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-alias_it_behaves_like_to","(name, *args, &block)","<p>Works like `alias_method :name, :it_behaves_like` with the added benefit of\nassigning default metadata …\n"],["alias_it_should_behave_like_to","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-alias_it_should_behave_like_to","(new_name, report_label = '')",""],["all_apply?","RSpec::Core::Example","RSpec/Core/Example.html#method-i-all_apply-3F","(filters)","<p>@private\n"],["all_apply?","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-all_apply-3F","(filters)","<p>@private\n"],["all_apply?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-all_apply-3F","(filters)","<p>@private\n"],["announce_exclusion_filter","RSpec::Core::World","RSpec/Core/World.html#method-i-announce_exclusion_filter","(announcements)",""],["announce_filters","RSpec::Core::World","RSpec/Core/World.html#method-i-announce_filters","()",""],["announce_inclusion_filter","RSpec::Core::World","RSpec/Core/World.html#method-i-announce_inclusion_filter","(announcements)",""],["any_apply?","RSpec::Core::Example","RSpec/Core/Example.html#method-i-any_apply-3F","(filters)","<p>@private\n"],["any_apply?","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-any_apply-3F","(filters)","<p>@private\n"],["any_apply?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-any_apply-3F","(filters)","<p>@private\n"],["append_after","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-append_after","(*args, &block)","<p>Adds `block` to the back of the list of `after` blocks in the same scope\n(`:each`, `:all`, or `:suite`). …\n"],["append_before","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-append_before","(*args, &block)",""],["around","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-around","(*args, &block)","<p>@api public @overload around(&amp;block) @overload around(scope,\n&amp;block) @overload around(scope, …\n"],["around_each_hooks","RSpec::Core::Example","RSpec/Core/Example.html#method-i-around_each_hooks","()","<p>@private\n"],["around_each_hooks_for","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-around_each_hooks_for","(example, initial_procsy=nil)","<p>@private\n"],["ascend_until","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-ascend_until","()",""],["assign_before_all_ivars","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-assign_before_all_ivars","(ivars, example_group_instance)","<p>@private\n"],["autorun","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-autorun","()","<p>Register an at_exit hook that runs the suite.\n"],["autorun_disabled?","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-autorun_disabled-3F","()",""],["backtrace_clean_patterns","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_clean_patterns","()","<p>The patterns to discard from backtraces. Deprecated, use\nConfiguration#backtrace_exclusion_patterns instead …\n"],["backtrace_clean_patterns=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_clean_patterns-3D","(patterns)",""],["backtrace_exclusion_patterns","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_exclusion_patterns","()","<p>The patterns to discard from backtraces.\n<p>Defaults to RSpec::Core::BacktraceCleaner::DEFAULT_EXCLUSION_PATTERNS …\n"],["backtrace_exclusion_patterns=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_exclusion_patterns-3D","(patterns)",""],["backtrace_inclusion_patterns","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_inclusion_patterns","()","<p>The patterns to always include to backtraces.\n<p>Defaults to [Regexp.new Dir.getwd] if the current working …\n"],["backtrace_inclusion_patterns=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-backtrace_inclusion_patterns-3D","(patterns)",""],["backtrace_line","RSpec::Core::BacktraceFormatter","RSpec/Core/BacktraceFormatter.html#method-i-backtrace_line","(line)",""],["backtrace_line","RSpec::Core::Formatters::TextMateFormatter","RSpec/Core/Formatters/TextMateFormatter.html#method-i-backtrace_line","(line, skip_textmate_conversion=false)",""],["before","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-before","(*args, &block)","<p>@api public @overload before(&amp;block) @overload before(scope,\n&amp;block) @overload before(scope, …\n"],["before_all_ivars","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-before_all_ivars","()","<p>@private\n"],["blue","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-blue","(text)",""],["bold","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-bold","(text)",""],["build_metadata_hash_from","RSpec::Core::MetadataHashBuilder::Common","RSpec/Core/MetadataHashBuilder/Common.html#method-i-build_metadata_hash_from","(args)",""],["children","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-children","()","<p>@private\n"],["clear","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-i-clear","()",""],["clear_remaining_example_groups","RSpec","RSpec.html#method-c-clear_remaining_example_groups","()","<p>@private Used internally to clear remaining groups when fail_fast is set\n"],["close","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-close","()","<p>@api public\n<p>Invoked at the very end, `close` allows the formatter to clean up\nresources, e.g. open streams, …\n"],["close","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-close","()",""],["close","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-i-close","()",""],["color","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-color","(output=output_stream)",""],["color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-color","(text, color_code)",""],["color=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-color-3D","(bool)",""],["color_code_for","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-color_code_for","(code_or_symbol)",""],["color_enabled","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-color_enabled","(output=output_stream)","<p>TODO - deprecate color_enabled - probably not until the last 2.x release\nbefore 3.0\n"],["color_enabled=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-color_enabled-3D","(bool)",""],["color_enabled?","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-color_enabled-3F","()",""],["colorise_summary","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-colorise_summary","(summary)","<p>@api public\n<p>Colorizes the output red for failure, yellow for pending, and green\notherwise.\n<p>@param [String] …\n"],["colorize","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-colorize","(text, code_or_symbol)",""],["configuration","RSpec","RSpec.html#method-c-configuration","()","<p>Returns the global [Configuration](RSpec/Core/Configuration) object. While\nyou <em>can</em> use this method to …\n"],["configuration","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-configuration","()",""],["configuration","RSpec::Core::MockFrameworkAdapter","RSpec/Core/MockFrameworkAdapter.html#method-c-configuration","()",""],["configuration=","RSpec","RSpec.html#method-c-configuration-3D","(new_configuration)","<p>@private Used internally to set the global object\n"],["configure","RSpec","RSpec.html#method-c-configure","()","<p>Yields the global configuration to a block. @yield [Configuration] global\nconfiguration\n<p>@example\n\n<pre>RSpec.configure ...</pre>\n"],["configure","RSpec::Core::ConfigurationOptions","RSpec/Core/ConfigurationOptions.html#method-i-configure","(config)",""],["configure","RSpec::Runner","RSpec/Runner.html#method-c-configure","(&block)","<p>@deprecated use RSpec.configure instead.\n"],["configure_expectation_framework","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-configure_expectation_framework","()","<p>@private\n"],["configure_for_example","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-configure_for_example","(description, user_metadata)",""],["configure_group","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-configure_group","(group)","<p>@private\n<p>Used internally to extend a group with modules using `include` and/or\n`extend`.\n"],["configure_group","RSpec::Core::World","RSpec/Core/World.html#method-i-configure_group","(group)",""],["configure_mock_framework","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-configure_mock_framework","()","<p>@private\n"],["consolidate_failures","Autotest::Rspec2","Autotest/Rspec2.html#method-i-consolidate_failures","(failed)","<p>Overrides Autotest’s implementation to read rspec output\n"],["const_missing","RSpec","RSpec.html#method-c-const_missing","(name)",""],["const_missing","RSpec::Core::ConstMissing","RSpec/Core/ConstMissing.html#method-i-const_missing","(name)","<p>Used to print deprecation warnings for Rspec and Spec constants (use RSpec\ninstead)\n"],["const_missing","RSpec::Rake","RSpec/Rake.html#method-c-const_missing","(name)","<p>Used to print deprecation warnings for Rake::SpecTask constant (use\nRSpec::Core::RakeTask instead)\n"],["container_stack","RSpec::Core::Metadata::GroupMetadataHash","RSpec/Core/Metadata/GroupMetadataHash.html#method-i-container_stack","()",""],["context","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-context","(*args, &example_group_block)",""],["convert","RSpec::Core::Formatters::SnippetExtractor::NullConverter","RSpec/Core/Formatters/SnippetExtractor/NullConverter.html#method-i-convert","(code, pre)",""],["convert_deprecated_args","RSpec::Core::Parser","RSpec/Core/Parser.html#method-i-convert_deprecated_args","(args)",""],["create_dot_rspec_file","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-create_dot_rspec_file","()",""],["create_spec_helper_file","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-create_spec_helper_file","()",""],["created_from_caller","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-c-created_from_caller","(other_caller)",""],["current_indentation","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-current_indentation","()",""],["cyan","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-cyan","(text)",""],["debug=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-debug-3D","(bool)",""],["debug?","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-debug-3F","()",""],["debugger","Kernel","Kernel.html#method-i-debugger","(*args)","<p>If not already defined by ruby-debug, this implementation prints helpful\nmessage to STDERR when ruby-debug …\n"],["declaration_line_numbers","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-declaration_line_numbers","()","<p>@private\n"],["default_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-default_color","(text)",""],["define_aliases","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-define_aliases","(name, alias_name)","<p>@private\n"],["define_example_method","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-define_example_method","(name, extra_options={})","<p>@private @macro [attach] define_example_method\n\n<pre>@param [String] name\n@param [Hash] extra_options\n@param ...</pre>\n"],["define_nested_shared_group_method","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-define_nested_shared_group_method","(new_name, report_label=nil)","<p>@private @macro [attach] define_nested_shared_group_method\n\n<pre>@see SharedExampleGroup</pre>\n"],["define_predicate_for","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-define_predicate_for","(*names)","<p>@private\n"],["define_reader","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-define_reader","(name)","<p>@private\n"],["delegate_to_metadata","RSpec::Core::Example","RSpec/Core/Example.html#method-c-delegate_to_metadata","(*keys)","<p>@private\n<p>Used to define methods that delegate to this example’s metadata\n"],["delegate_to_metadata","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-delegate_to_metadata","(*names)","<p>@private\n"],["delete_if_confirmed","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-delete_if_confirmed","(path, message)",""],["deprecate","RSpec::Core::Deprecation","RSpec/Core/Deprecation.html#method-i-deprecate","(deprecated, replacement_or_hash={}, ignore_version=nil)","<p>@private\n<p>Used internally to print deprecation warnings\n"],["deprecate_alias_key","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-deprecate_alias_key","()","<p>@private\n"],["deprecation","RSpec::Core::Formatters::DeprecationFormatter","RSpec/Core/Formatters/DeprecationFormatter.html#method-i-deprecation","(data)",""],["deprecation","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-deprecation","(message)",""],["deprecation_summary","RSpec::Core::Formatters::DeprecationFormatter","RSpec/Core/Formatters/DeprecationFormatter.html#method-i-deprecation_summary","()",""],["descendant_filtered_examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-descendant_filtered_examples","()","<p>@private\n"],["descendants","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-descendants","()","<p>@private\n"],["describe","RSpec::Core::DSL","RSpec/Core/DSL.html#method-i-describe","(*args, &example_group_block)","<p>Generates a subclass of {ExampleGroup}\n<p>## Examples:\n\n<pre>describe &quot;something&quot; do\n  it &quot;does something&quot; do\n  ...</pre>\n"],["describe","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-describe","(*args, &example_group_block)","<p>Generates a subclass of this example group which inherits everything except\nthe examples themselves. …\n"],["described_class","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-i-described_class","()","<p>Returns the class or module passed to the `describe` method (or alias).\nReturns nil if the subject is …\n"],["described_class","RSpec::Core::Metadata::ExampleMetadataHash","RSpec/Core/Metadata/ExampleMetadataHash.html#method-i-described_class","()",""],["described_class","RSpec::Core::Metadata::GroupMetadataHash","RSpec/Core/Metadata/GroupMetadataHash.html#method-i-described_class","()",""],["description","RSpec::Core::Example","RSpec/Core/Example.html#method-i-description","()","<p>Returns the string submitted to `example` or its aliases (e.g. `specify`,\n`it`, etc).  If no string is …\n"],["description","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-description","()",""],["description","RSpec::Core::FilterManager::Describable","RSpec/Core/FilterManager/Describable.html#method-i-description","()",""],["detail_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-detail_color","(text)",""],["determine_root","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-determine_root","()",""],["disable_autorun!","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-disable_autorun-21","()",""],["display_name","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-display_name","()",""],["display_name","RSpec::Core::Hooks::AfterAllHook","RSpec/Core/Hooks/AfterAllHook.html#method-i-display_name","()",""],["display_name","RSpec::Core::Hooks::AfterHook","RSpec/Core/Hooks/AfterHook.html#method-i-display_name","()",""],["display_name","RSpec::Core::Hooks::AroundHook","RSpec/Core/Hooks/AroundHook.html#method-i-display_name","()",""],["display_name","RSpec::Core::Hooks::BeforeHook","RSpec/Core/Hooks/BeforeHook.html#method-i-display_name","()",""],["drb_argv","RSpec::Core::ConfigurationOptions","RSpec/Core/ConfigurationOptions.html#method-i-drb_argv","()",""],["drb_port","RSpec::Core::DRbCommandLine","RSpec/Core/DRbCommandLine.html#method-i-drb_port","()",""],["dump_commands_to_rerun_failed_examples","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_commands_to_rerun_failed_examples","()","<p>@api public\n<p>Outputs commands which can be used to re-run failed examples.\n"],["dump_failures","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-dump_failures","()","<p>@api public\n<p>Dumps detailed information about each example failure.\n<p>@return [nil]\n"],["dump_failures","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_failures","()",""],["dump_failures","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-dump_failures","()",""],["dump_pending","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-dump_pending","()","<p>@api public\n<p>Outputs a report of pending examples.  This gets invoked after the summary\nif option is set …\n"],["dump_pending","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_pending","()",""],["dump_pending","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-dump_pending","()",""],["dump_profile","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_profile","()","<p>@api public\n<p>Outputs the slowest examples and example groups in a report when using\n`–profile COUNT` (default …\n"],["dump_profile_slowest_example_groups","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_profile_slowest_example_groups","()",""],["dump_profile_slowest_examples","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_profile_slowest_examples","()",""],["dump_summary","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-dump_summary","(duration, example_count, failure_count, pending_count)","<p>@api public\n<p>This method is invoked after the dumping of examples and failures. Each\nparameter is assigned …\n"],["dump_summary","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-dump_summary","(duration, example_count, failure_count, pending_count)",""],["dump_summary","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-dump_summary","(duration, example_count, failure_count, pending_count)",""],["dump_summary","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-i-dump_summary","(duration, example_count, failure_count, pending_count)",""],["empty?","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-empty-3F","()",""],["empty_without_conditional_filters?","RSpec::Core::FilterManager::Describable","RSpec/Core/FilterManager/Describable.html#method-i-empty_without_conditional_filters-3F","()",""],["ensure_example_groups_are_configured","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-ensure_example_groups_are_configured","()","<p>@private\n"],["everything_filtered_message","RSpec::Core::World","RSpec/Core/World.html#method-i-everything_filtered_message","()",""],["example_count","RSpec::Core::World","RSpec/Core/World.html#method-i-example_count","()",""],["example_failed","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_failed","(example)","<p>@api public\n<p>Invoked when an example fails.\n<p>@param example instance of subclass of `RSpec::Core::ExampleGroup` …\n"],["example_failed","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_failed","(example)",""],["example_failed","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_failed","(example)",""],["example_failed","RSpec::Core::Formatters::ProgressFormatter","RSpec/Core/Formatters/ProgressFormatter.html#method-i-example_failed","(example)",""],["example_failed","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_failed","(example)",""],["example_group","RSpec::Core::Example","RSpec/Core/Example.html#method-i-example_group","()","<p>Returns the example group class that provides the context for running this\nexample.\n"],["example_group_chain","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_group_chain","()",""],["example_group_finished","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_group_finished","(example_group)","<p>@api public\n<p>Invoked at the end of the execution of each example group.\n<p>@param example_group subclass of …\n"],["example_group_finished","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_group_finished","(example_group)",""],["example_group_finished","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_group_finished","(group)",""],["example_group_number","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_group_number","()","<p>The number of the currently running example_group\n"],["example_group_started","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_group_started","(example_group)","<p>@api public\n<p>This method is invoked at the beginning of the execution of each example\ngroup.\n<p>@param example_group …\n"],["example_group_started","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_group_started","(example_group)",""],["example_group_started","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_group_started","(example_group)",""],["example_group_started","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_group_started","(group)",""],["example_number","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_number","()","<p>The number of the currently running example (a global counter)\n"],["example_ordering_block","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-example_ordering_block","()","<p>@private\n"],["example_passed","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_passed","(example)","<p>@api public\n<p>Invoked when an example passes.\n<p>@param example instance of subclass of `RSpec::Core::ExampleGroup` …\n"],["example_passed","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_passed","(example)",""],["example_passed","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_passed","(example)",""],["example_passed","RSpec::Core::Formatters::ProgressFormatter","RSpec/Core/Formatters/ProgressFormatter.html#method-i-example_passed","(example)",""],["example_passed","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_passed","(example)",""],["example_pending","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_pending","(example)","<p>Invoked when an example is pending.\n<p>@param example instance of subclass of `RSpec::Core::ExampleGroup` …\n"],["example_pending","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-example_pending","(example)",""],["example_pending","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_pending","(example)",""],["example_pending","RSpec::Core::Formatters::ProgressFormatter","RSpec/Core/Formatters/ProgressFormatter.html#method-i-example_pending","(example)",""],["example_pending","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_pending","(example)",""],["example_started","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-example_started","(example)","<p>@api public\n<p>Invoked at the beginning of the execution of each example.\n<p>@param example instance of subclass …\n"],["example_started","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-example_started","(example)",""],["example_started","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-example_started","(example)",""],["examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-examples","()","<p>@private\n"],["exclude","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-exclude","(*args)",""],["exclude!","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-exclude-21","(*args)",""],["exclude?","RSpec::Core::BacktraceCleaner","RSpec/Core/BacktraceCleaner.html#method-i-exclude-3F","(line)",""],["exclude?","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-exclude-3F","(example)",""],["exclude_with_low_priority","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-exclude_with_low_priority","(*args)",""],["exclusion_filter","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-exclusion_filter","()","<p>Returns the `exclusion_filter`. If none has been set, returns an empty\nhash.\n"],["exclusion_filter","RSpec::Core::World","RSpec/Core/World.html#method-i-exclusion_filter","()",""],["exclusion_filter=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-exclusion_filter-3D","(filter)","<p>Clears and reassigns the `exclusion_filter`. Set to `nil` if you don’t want\nany exclusion filter at all. …\n"],["expect_with","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-expect_with","(*frameworks)","<p>Sets the expectation framework module(s) to be included in each example\ngroup.\n<p>`frameworks` can be `:rspec`, …\n"],["expectation_framework=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-expectation_framework-3D","(framework)","<p>Delegates to expect_with(framework)\n"],["expectation_frameworks","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-expectation_frameworks","()","<p>Returns the configured expectation framework adapter module(s)\n"],["extend","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-extend","(mod, *filters)","<p>Tells RSpec to extend example groups with `mod`.  Methods defined in `mod`\nare exposed to example groups …\n"],["extended","RSpec::Core::Example::Procsy","RSpec/Core/Example/Procsy.html#method-c-extended","(proc)","<p>@api private @param [Proc] Adds a `run` method to the extended Proc,\nallowing it to be invoked in an …\n"],["extra_failure_content","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-extra_failure_content","(exception)","<p>Override this method if you wish to output extra HTML for a failed spec.\nFor example, you could output …\n"],["extra_failure_content","RSpec::Core::Formatters::TextMateFormatter","RSpec/Core/Formatters/TextMateFormatter.html#method-i-extra_failure_content","(exception)",""],["fail_fast?","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-fail_fast-3F","()","<p>@private\n"],["fail_fast?","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-fail_fast-3F","()",""],["fail_filtered_examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-fail_filtered_examples","(exception, reporter)","<p>@private\n"],["fail_with_exception","RSpec::Core::Example","RSpec/Core/Example.html#method-i-fail_with_exception","(reporter, exception)","<p>@private\n<p>Used internally to set an exception and fail without actually executing the\nexample when an exception …\n"],["failure_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-failure_color","(text)",""],["failure_output","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-failure_output","(example, exception)",""],["fetch","RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html#method-i-fetch","(key, &block)",""],["fetch","RSpec::Core::Metadata::MetadataHash","RSpec/Core/Metadata/MetadataHash.html#method-i-fetch","(key, *args)",""],["files_or_directories_to_run=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-files_or_directories_to_run-3D","(*files)","<p>@private\n"],["filter","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-filter","()",""],["filter=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-filter-3D","(filter)",""],["filter_applies?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-filter_applies-3F","(key, value, metadata=self)","<p>@private\n"],["filter_applies_to_any_value?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-filter_applies_to_any_value-3F","(key, value)","<p>@private\n"],["filter_manager","RSpec::Core::ConfigurationOptions","RSpec/Core/ConfigurationOptions.html#method-i-filter_manager","()",""],["filter_manager","RSpec::Core::World","RSpec/Core/World.html#method-i-filter_manager","()",""],["filter_run","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-filter_run","(*args)",""],["filter_run_excluding","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-filter_run_excluding","(*args)","<p>Adds key/value pairs to the `exclusion_filter`. If the\n`treat_symbols_as_metadata_keys_with_true_values …\n"],["filter_run_including","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-filter_run_including","(*args)","<p>Adds key/value pairs to the `inclusion_filter`. If the\n`treat_symbols_as_metadata_keys_with_true_values …\n"],["filtered_examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-filtered_examples","()","<p>@private\n"],["filters_apply?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-filters_apply-3F","(key, value)","<p>@private\n"],["find_and_eval_shared","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-find_and_eval_shared","(label, name, *args, &customization_block)","<p>@private\n"],["find_failed_line","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-find_failed_line","(backtrace, path)",""],["find_first_parent_containing","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-find_first_parent_containing","(dir)",""],["finish","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-finish","(seed)",""],["fixed_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-fixed_color","(text)",""],["flush","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-flush","()",""],["for","RSpec::Core::Hooks::AroundHookCollection","RSpec/Core/Hooks/AroundHookCollection.html#method-i-for","(example, initial_procsy=nil)",""],["for","RSpec::Core::Hooks::GroupHookCollection","RSpec/Core/Hooks/GroupHookCollection.html#method-i-for","(group)",""],["for","RSpec::Core::Hooks::HookCollection","RSpec/Core/Hooks/HookCollection.html#method-i-for","(example_or_group)",""],["for_example","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-for_example","(description, user_metadata)","<p>@private\n"],["force","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-force","(hash)","<p>@private\n<p>Used to set higher priority option values from the command line.\n"],["format_backtrace","RSpec::Core::BacktraceFormatter","RSpec/Core/BacktraceFormatter.html#method-i-format_backtrace","(backtrace, options = {})",""],["format_backtrace","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-format_backtrace","(backtrace, example)","<p>@api public\n<p>Formats the given backtrace based on configuration and the metadata of the\ngiven example. …\n"],["format_backtrace_line_for_textmate","RSpec::Core::Formatters::TextMateFormatter","RSpec/Core/Formatters/TextMateFormatter.html#method-i-format_backtrace_line_for_textmate","(line)",""],["format_docstrings","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-format_docstrings","(&block)","<p>Formats the docstring output using the block provided.\n<p>@example\n\n<pre># This will strip the descriptions of both ...</pre>\n"],["format_docstrings_block","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-format_docstrings_block","()","<p>@private\n"],["format_duration","RSpec::Core::Formatters::Helpers","RSpec/Core/Formatters/Helpers.html#method-i-format_duration","(duration)","<p>@api private\n<p>Formats seconds into a human-readable string.\n<p>@param [Float, Fixnum] duration in seconds @return …\n"],["format_seconds","RSpec::Core::Formatters::Helpers","RSpec/Core/Formatters/Helpers.html#method-i-format_seconds","(float, precision = nil)","<p>@api private\n<p>Formats seconds to have 5 digits of precision with trailing zeros removed\nif the number is …\n"],["formatter=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-formatter-3D","(formatter_to_use, *paths)",""],["formatters","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-formatters","()",""],["framework_name","RSpec::Core::MockFrameworkAdapter","RSpec/Core/MockFrameworkAdapter.html#method-c-framework_name","()",""],["full_backtrace=","RSpec::Core::BacktraceCleaner","RSpec/Core/BacktraceCleaner.html#method-i-full_backtrace-3D","(true_or_false)",""],["full_backtrace=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-full_backtrace-3D","(true_or_false)",""],["full_backtrace?","RSpec::Core::BacktraceCleaner","RSpec/Core/BacktraceCleaner.html#method-i-full_backtrace-3F","()",""],["full_backtrace?","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-full_backtrace-3F","()",""],["full_description","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-full_description","()",""],["full_description","RSpec::Core::Metadata::ExampleMetadataHash","RSpec/Core/Metadata/ExampleMetadataHash.html#method-i-full_description","()",""],["full_description","RSpec::Core::Metadata::GroupMetadataHash","RSpec/Core/Metadata/GroupMetadataHash.html#method-i-full_description","()",""],["full_description=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-full_description-3D","(description)",""],["gemfile=","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-gemfile-3D","(*)","<p>@deprecated Has no effect. The rake task now checks ENV instead.\n"],["green","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-green","(text)",""],["group_ordering_block","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-group_ordering_block","()","<p>@private\n"],["hooks","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-hooks","()","<p>@private\n"],["include","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-include","(mod, *filters)","<p>Tells RSpec to include `mod` in example groups. Methods defined in `mod`\nare exposed to examples (not …\n"],["include","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-include","(*args)",""],["include!","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-include-21","(*args)",""],["include?","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-include-3F","(example)",""],["include_context","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-include_context","(name, *args, &block)","<p>Includes shared content mapped to `name` directly in the group in which it\nis declared, as opposed to …\n"],["include_examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-include_examples","(name, *args, &block)","<p>Includes shared content mapped to `name` directly in the group in which it\nis declared, as opposed to …\n"],["include_with_low_priority","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-include_with_low_priority","(*args)",""],["included","RSpec::Core::Hooks::HookCollectionAliases","RSpec/Core/Hooks/HookCollectionAliases.html#method-c-included","(host)",""],["included","RSpec::Core::SharedContext","RSpec/Core/SharedContext.html#method-i-included","(group)","<p>@api private\n"],["included","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-c-included","(kls)",""],["inclusion_filter","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-inclusion_filter","()","<p>Returns the `inclusion_filter`. If none has been set, returns an empty\nhash.\n"],["inclusion_filter","RSpec::Core::World","RSpec/Core/World.html#method-i-inclusion_filter","()",""],["inclusion_filter=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-inclusion_filter-3D","(filter)","<p>Clears and reassigns the `inclusion_filter`. Set to `nil` if you don’t want\nany inclusion filter at all. …\n"],["installed_at_exit?","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-installed_at_exit-3F","()",""],["instance_eval","RSpec::Core::Example","RSpec/Core/Example.html#method-i-instance_eval","(*args, &block)","<p>@private\n"],["instance_eval_with_args","RSpec::Core::Example","RSpec/Core/Example.html#method-i-instance_eval_with_args","(*args, &block)","<p>@private\n"],["instance_eval_with_args","RSpec::Core::Extensions::InstanceEvalWithArgs","RSpec/Core/Extensions/InstanceEvalWithArgs.html#method-i-instance_eval_with_args","(*args, &block)","<p>@private\n<p>Used internally to support `instance_exec` in Ruby 1.8.6.\n<p>based on Bounded Spec InstanceExec ( …\n"],["instance_eval_with_rescue","RSpec::Core::Example","RSpec/Core/Example.html#method-i-instance_eval_with_rescue","(context = nil, &block)","<p>@private\n"],["instance_eval_with_rescue","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-i-instance_eval_with_rescue","(context = nil, &hook)","<p>@private instance_evals the block, capturing and reporting an exception if\nraised\n"],["isolate_for_before_all","RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html#method-c-isolate_for_before_all","(example_group_instance)",""],["its","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-its","(attribute, &block)","<p>Creates a nested example group named by the submitted `attribute`, and then\ngenerates an example using …\n"],["let","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-let","(name, &block)","<p>Generates a method whose return value is memoized after the first call.\nUseful for reducing duplication …\n"],["let!","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-let-21","(name, &block)","<p>Just like `let`, except the block is invoked by an implicit `before` hook.\nThis serves a dual purpose …\n"],["libs=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-libs-3D","(libs)",""],["line_number_filter_applies?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-line_number_filter_applies-3F","(line_numbers)","<p>@private\n"],["line_numbers","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-line_numbers","()",""],["line_numbers=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-line_numbers-3D","(line_numbers)","<p>Run examples defined on `line_numbers` in all files to run.\n"],["lines_around","RSpec::Core::Formatters::SnippetExtractor","RSpec/Core/Formatters/SnippetExtractor.html#method-i-lines_around","(file, line)","<p>@api private\n<p>Extract lines of code centered around a particular line within a source\nfile.\n<p>@param [String] …\n"],["load_spec_files","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-load_spec_files","()","<p>@private\n"],["location_filter_applies?","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-location_filter_applies-3F","(locations)","<p>@private\n"],["long_padding","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-long_padding","()",""],["magenta","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-magenta","(text)",""],["make_example_group_header_red","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-make_example_group_header_red","(group_id)",""],["make_example_group_header_yellow","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-make_example_group_header_yellow","(group_id)",""],["make_header_red","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-make_header_red","()",""],["make_header_yellow","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-make_header_yellow","()",""],["make_test_cmd","Autotest::Rspec2","Autotest/Rspec2.html#method-i-make_test_cmd","(files_to_test)","<p>Overrides Autotest’s implementation to generate the rspec command to run\n"],["merge","RSpec::Core::FilterManager::BackwardCompatibility","RSpec/Core/FilterManager/BackwardCompatibility.html#method-i-merge","(orig, opposite, *updates)",""],["message","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-message","(message)","<p>@api public\n<p>Used by the reporter to send messages to the output stream.\n<p>@param [String] message\n"],["message","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-message","(message)",""],["message","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-message","(message)",""],["message","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-i-message","(message)",""],["message","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-message","(message)",""],["metadata","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-metadata","()","<p>The [Metadata](Metadata) object associated with this group. @see Metadata\n"],["mock_framework","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-mock_framework","()","<p>Returns the configured mock framework adapter module\n"],["mock_framework=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-mock_framework-3D","(framework)","<p>Delegates to mock_framework=(framework)\n"],["mock_with","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-mock_with","(framework)","<p>Sets the mock framework adapter module.\n<p>`framework` can be a Symbol or a Module.\n<p>Given any of `:rspec`, …\n"],["module_eval_with_args","RSpec::Core::Extensions::ModuleEvalWithArgs","RSpec/Core/Extensions/ModuleEvalWithArgs.html#method-i-module_eval_with_args","(*args, &block)","<p>@private\n<p>Used internally to support `module_exec` in Ruby 1.8.6.\n"],["move_progress","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-move_progress","( percent_done )",""],["mute_profile_output?","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-mute_profile_output-3F","(failure_count)",""],["new","Autotest::Rspec2","Autotest/Rspec2.html#method-c-new","()",""],["new","RSpec::Core::BacktraceCleaner","RSpec/Core/BacktraceCleaner.html#method-c-new","(inclusion_patterns=nil, exclusion_patterns=DEFAULT_EXCLUSION_PATTERNS.dup)",""],["new","RSpec::Core::CommandLine","RSpec/Core/CommandLine.html#method-c-new","(options, configuration=RSpec::configuration, world=RSpec::world)",""],["new","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-c-new","()",""],["new","RSpec::Core::ConfigurationOptions","RSpec/Core/ConfigurationOptions.html#method-c-new","(args)",""],["new","RSpec::Core::DRbCommandLine","RSpec/Core/DRbCommandLine.html#method-c-new","(options)",""],["new","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-c-new","(submitted_options, filter_manager)",""],["new","RSpec::Core::Example","RSpec/Core/Example.html#method-c-new","(example_group_class, description, metadata, example_block=nil)","<p>Creates a new instance of Example. @param example_group_class the subclass\nof ExampleGroup in which this …\n"],["new","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-c-new","()",""],["new","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-c-new","(output)","<p>@api public\n<p>@param output\n"],["new","RSpec::Core::Formatters::DeprecationFormatter","RSpec/Core/Formatters/DeprecationFormatter.html#method-c-new","(deprecation_stream=$stderr, summary_stream=$stdout)",""],["new","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-c-new","(output)",""],["new","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-c-new","(output)",""],["new","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-c-new","(output)",""],["new","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-c-new","(output)",""],["new","RSpec::Core::Hooks::Hook","RSpec/Core/Hooks/Hook.html#method-c-new","(block, options)",""],["new","RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html#method-c-new","(example_group_instance)",""],["new","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-c-new","(parent_group_metadata=nil)",""],["new","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-c-new","(arg=nil)",""],["new","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-c-new","(*args, &task_block)",""],["new","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-c-new","(*formatters)",""],["new","RSpec::Core::SharedExampleGroup::Collection","RSpec/Core/SharedExampleGroup/Collection.html#method-c-new","(sources, examples)",""],["new","RSpec::Core::World","RSpec/Core/World.html#method-c-new","(configuration=RSpec.configuration)",""],["next_failure_index","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-next_failure_index","()",""],["normalize","Autotest::Rspec2","Autotest/Rspec2.html#method-i-normalize","(files_to_test)","<p>Generates a map of filenames to Arrays for Autotest\n"],["notify","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-notify","(event, *args, &block)",""],["options","RSpec::Core::DrbOptions","RSpec/Core/DrbOptions.html#method-i-options","()",""],["options","RSpec::Core::Example","RSpec/Core/Example.html#method-i-options","()","<p>@deprecated access options via metadata instead\n"],["options_apply?","RSpec::Core::Hooks::Hook","RSpec/Core/Hooks/Hook.html#method-i-options_apply-3F","(example_or_group)",""],["order=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-order-3D","(type)","<p>@api\n<p>Sets the order and, if order is `‘rand:&lt;seed&gt;’`, also sets the seed.\n"],["order_examples","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-order_examples","(&block)","<p>Sets a strategy by which to order examples.\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">RSpec</span>.<span class=\"ruby-identifier\">configure</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">config</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">order_examples</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["order_groups","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-order_groups","(&block)","<p>Sets a strategy by which to order groups.\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">RSpec</span>.<span class=\"ruby-identifier\">configure</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">config</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">order_groups</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["order_groups_and_examples","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-order_groups_and_examples","(&block)","<p>Sets a strategy by which to order groups and examples.\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">RSpec</span>.<span class=\"ruby-identifier\">configure</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">config</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">order_groups_and_examples</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ordered","RSpec::Core::Extensions::Ordered::ExampleGroups","RSpec/Core/Extensions/Ordered/ExampleGroups.html#method-i-ordered","()","<p>@private\n"],["ordered","RSpec::Core::Extensions::Ordered::Examples","RSpec/Core/Extensions/Ordered/Examples.html#method-i-ordered","()","<p>@private\n"],["output_supports_sync","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-output_supports_sync","()",""],["parent_groups","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-parent_groups","()","<p>@private\n"],["parse","RSpec::Core::Parser","RSpec/Core/Parser.html#method-c-parse","(args)",""],["parse","RSpec::Core::Parser","RSpec/Core/Parser.html#method-i-parse","(args)",""],["parse!","RSpec::Core::Parser","RSpec/Core/Parser.html#method-i-parse-21","(args)",""],["parse!","RSpec::Core::Parser","RSpec/Core/Parser.html#method-c-parse-21","(args)",""],["parse_options","RSpec::Core::ConfigurationOptions","RSpec/Core/ConfigurationOptions.html#method-i-parse_options","()",""],["parser","RSpec::Core::Parser","RSpec/Core/Parser.html#method-i-parser","(options)",""],["passed_output","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-passed_output","(example)",""],["pending","RSpec::Core::Pending","RSpec/Core/Pending.html#method-i-pending","(*args)","<p>@overload pending() @overload pending(message) @overload pending(message,\n&amp;block)\n<p>Stops execution …\n"],["pending_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-pending_color","(text)",""],["pending_output","RSpec::Core::Formatters::DocumentationFormatter","RSpec/Core/Formatters/DocumentationFormatter.html#method-i-pending_output","(example, message)",""],["percent_done","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-percent_done","()",""],["pluralize","RSpec::Core::Formatters::Helpers","RSpec/Core/Formatters/Helpers.html#method-i-pluralize","(count, string)","<p>@api private\n<p>Pluralize a word based on a count.\n<p>@param [Fixnum] count number of objects @param [String] …\n"],["post_process","RSpec::Core::Formatters::SnippetExtractor","RSpec/Core/Formatters/SnippetExtractor.html#method-i-post_process","(highlighted, offending_line)","<p>@api private\n<p>Adds line numbers to all lines and highlights the line where the failure\noccurred using html …\n"],["preceding_declaration_line","RSpec::Core::World","RSpec/Core/World.html#method-i-preceding_declaration_line","(filter_line)",""],["prepend_after","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-prepend_after","(*args, &block)",""],["prepend_before","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-prepend_before","(*args, &block)","<p>Adds `block` to the front of the list of `before` blocks in the same scope\n(`:each`, `:all`, or `:suite`). …\n"],["preserve_accessed_lets","RSpec::Core::MemoizedHelpers::BeforeAllMemoizedHash","RSpec/Core/MemoizedHelpers/BeforeAllMemoizedHash.html#method-i-preserve_accessed_lets","()",""],["print_example_failed","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_example_failed","( pending_fixed, description, run_time, failure_id, exception, extra_content, escape_backtrace = false )",""],["print_example_group_end","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_example_group_end","()",""],["print_example_group_start","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_example_group_start","( group_id, description, number_of_parents )",""],["print_example_passed","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_example_passed","( description, run_time )",""],["print_example_pending","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_example_pending","( description, pending_message )",""],["print_html_start","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_html_start","()",""],["print_summary","RSpec::Core::Formatters::HtmlPrinter","RSpec/Core/Formatters/HtmlPrinter.html#method-i-print_summary","( was_dry_run, duration, example_count, failure_count, pending_count )",""],["process","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-i-process","(*args)","<p>@private\n"],["procsy","RSpec::Core::Example","RSpec/Core/Example.html#method-c-procsy","(metadata, &proc)","<p>@api private\n<p>Wraps the example block in a Proc so it can invoked using `run` or `call`\nin [around](../ …\n"],["profile_examples","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-profile_examples","()","<p>@api private\n<p>Defaults `profile_examples` to 10 examples when `@profile_examples` is\n`true`.\n"],["profile_examples?","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-profile_examples-3F","()",""],["prune","RSpec::Core::FilterManager","RSpec/Core/FilterManager.html#method-i-prune","(examples)",""],["randomize?","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-randomize-3F","()",""],["read_failed_line","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-read_failed_line","(exception, example)",""],["record","RSpec::Core::SharedContext","RSpec/Core/SharedContext.html#method-c-record","(methods)","<p>@api private\n"],["red","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-red","(text)",""],["register","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-register","()","<p>@private\n"],["register","RSpec::Core::World","RSpec/Core/World.html#method-i-register","(example_group)",""],["register_globals","RSpec::Core::Hooks::RegistersGlobals","RSpec/Core/Hooks/RegistersGlobals.html#method-i-register_globals","(host, globals)",""],["register_listener","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-register_listener","(listener, *notifications)","<p>@api @param [Object] An obect that wishes to be notified of reporter events\n@param [Array] Array of symbols …\n"],["registered_listeners","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-registered_listeners","(notification)",""],["registry","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-c-registry","()",""],["relative_path","RSpec::Core::Metadata","RSpec/Core/Metadata.html#method-c-relative_path","(line)",""],["report","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-report","(expected_example_count, seed=nil)","<p>@api @overload report(count, &amp;block) @overload report(count, seed,\n&amp;block) @param [Integer] count …\n"],["report_creating","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-report_creating","(file)",""],["report_exists","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-report_exists","(file)",""],["reporter","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-reporter","()",""],["reporter","RSpec::Core::World","RSpec/Core/World.html#method-i-reporter","()",""],["requires=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-requires-3D","(paths)",""],["reset","RSpec","RSpec.html#method-c-reset","()","<p>@private Used internally to ensure examples get reloaded between multiple\nruns in the same process.\n"],["reset","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-reset","()","<p>@private\n"],["reset","RSpec::Core::World","RSpec/Core/World.html#method-i-reset","()",""],["restore_sync_output","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-restore_sync_output","()",""],["reverse_merge","RSpec::Core::FilterManager::BackwardCompatibility","RSpec/Core/FilterManager/BackwardCompatibility.html#method-i-reverse_merge","(orig, opposite, *updates)",""],["root","RSpec::Core::RubyProject","RSpec/Core/RubyProject.html#method-c-root","()",""],["run","RSpec::Core::CommandLine","RSpec/Core/CommandLine.html#method-i-run","(err, out)","<p>Configures and runs a suite\n<p>@param [IO] err @param [IO] out\n"],["run","RSpec::Core::DRbCommandLine","RSpec/Core/DRbCommandLine.html#method-i-run","(err, out)",""],["run","RSpec::Core::Example","RSpec/Core/Example.html#method-i-run","(example_group_instance, reporter)","<p>@api private instance_evals the block passed to the constructor in the\ncontext of the instance of {ExampleGroup}. …\n"],["run","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run","(reporter)","<p>Runs all the examples in this group\n"],["run","RSpec::Core::Hooks::AfterAllHook","RSpec/Core/Hooks/AfterAllHook.html#method-i-run","(example)",""],["run","RSpec::Core::Hooks::AfterHook","RSpec/Core/Hooks/AfterHook.html#method-i-run","(example)",""],["run","RSpec::Core::Hooks::AroundHookCollection","RSpec/Core/Hooks/AroundHookCollection.html#method-i-run","()",""],["run","RSpec::Core::Hooks::BeforeHook","RSpec/Core/Hooks/BeforeHook.html#method-i-run","(example)",""],["run","RSpec::Core::Hooks::GroupHookCollection","RSpec/Core/Hooks/GroupHookCollection.html#method-i-run","()",""],["run","RSpec::Core::Hooks::HookCollection","RSpec/Core/Hooks/HookCollection.html#method-i-run","()",""],["run","RSpec::Core::ProjectInitializer","RSpec/Core/ProjectInitializer.html#method-i-run","()",""],["run","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-run","(args, err=$stderr, out=$stdout)","<p>Run a suite of RSpec examples.\n<p>This is used internally by RSpec to run a suite, but is available for use …\n"],["run_after_all_hooks","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_after_all_hooks","(example_group_instance)","<p>@private\n"],["run_after_each_hooks","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_after_each_hooks","(example)","<p>@private\n"],["run_around_each_hooks","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_around_each_hooks","(example, initial_procsy)","<p>@private\n"],["run_before_all_hooks","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_before_all_hooks","(example_group_instance)","<p>@private\n"],["run_before_each_hooks","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_before_each_hooks","(example)","<p>@private\n"],["run_examples","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-run_examples","(reporter)","<p>@private\n"],["run_hook","RSpec::Core::Hooks","RSpec/Core/Hooks.html#method-i-run_hook","(hook, scope, example_or_group=ExampleGroup.new, initial_procsy=nil)","<p>@private\n<p>Runs all of the blocks stored with the hook in the context of the example.\nIf no example is provided, …\n"],["run_task","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-run_task","(verbose)",""],["running_example","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-i-running_example","()","<p>@deprecated use {ExampleGroup#example}\n"],["running_in_drb?","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-running_in_drb-3F","()",""],["safe_extend","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-safe_extend","(mod, host)",""],["safe_include","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-safe_include","(mod, host)","<p>@private\n"],["seed","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-seed","(number)","<p>@private not intended for use outside RSpec.\n"],["seed","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-seed","(number)",""],["seed=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-seed-3D","(seed)","<p>@api\n<p>Sets the seed value and sets `order=‘rand’`\n"],["set_exception","RSpec::Core::Example","RSpec/Core/Example.html#method-i-set_exception","(exception, context=nil)","<p>@private\n<p>Used internally to set an exception in an after hook, which captures the\nexception but doesn’t …\n"],["set_it_up","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-set_it_up","(*args)","<p>@private\n"],["set_ivars","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-set_ivars","(instance, ivars)","<p>@private\n"],["setup_ivars","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-setup_ivars","(args)",""],["setup_load_path_and_require","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-setup_load_path_and_require","(paths)","<p>@private\n"],["setup_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","RSpec/Core/MockFrameworkAdapter.html#method-i-setup_mocks_for_rspec","()",""],["setup_rspec_project_mappings","Autotest::Rspec2","Autotest/Rspec2.html#method-i-setup_rspec_project_mappings","()","<p>Adds conventional spec-to-file mappings to Autotest configuation.\n"],["share_as","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-share_as","(name, &block)","<p>@deprecated\n"],["share_as","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-share_as","(name, &block)",""],["share_examples_for","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-share_examples_for","(*args, &block)",""],["share_examples_for","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-share_examples_for","(*args, &block)",""],["shared_context","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-shared_context","(*args, &block)",""],["shared_context","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-shared_context","(*args, &block)",""],["shared_example_groups","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-shared_example_groups","()",""],["shared_example_groups","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-i-shared_example_groups","()",""],["shared_example_groups","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-shared_example_groups","()",""],["shared_example_groups_for","RSpec::Core::SharedExampleGroup::Registry","RSpec/Core/SharedExampleGroup/Registry.html#method-i-shared_example_groups_for","(*sources)",""],["shared_examples","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-shared_examples","(*args, &block)","<p>@overload shared_examples(name, &amp;block) @overload shared_examples(name,\ntags, &amp;block)\n<p>Wraps the …\n"],["shared_examples","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-shared_examples","(*args, &block)",""],["shared_examples_for","RSpec::Core::SharedExampleGroup","RSpec/Core/SharedExampleGroup.html#method-i-shared_examples_for","(*args, &block)",""],["shared_examples_for","RSpec::Core::SharedExampleGroup::TopLevelDSL","RSpec/Core/SharedExampleGroup/TopLevelDSL.html#method-i-shared_examples_for","(*args, &block)",""],["short_padding","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-short_padding","()",""],["should","RSpec::Core::MemoizedHelpers","RSpec/Core/MemoizedHelpers.html#method-i-should","(matcher=nil, message=nil)","<p>When `should` is called with no explicit receiver, the call is delegated to\nthe object returned by `subject`. …\n"],["should","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-should","(matcher=nil, message=nil)",""],["should_not","RSpec::Core::MemoizedHelpers","RSpec/Core/MemoizedHelpers.html#method-i-should_not","(matcher=nil, message=nil)","<p>Just like `should`, `should_not` delegates to the subject (implicit or\nexplicit) of the example group. …\n"],["should_not","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-should_not","(matcher=nil, message=nil)",""],["skip_bundler=","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-skip_bundler-3D","(*)","<p>@deprecated Has no effect. The rake task now checks ENV instead.\n"],["snippet","RSpec::Core::Formatters::SnippetExtractor","RSpec/Core/Formatters/SnippetExtractor.html#method-i-snippet","(backtrace)","<p>@api private\n<p>Extract lines of code corresponding to  a backtrace.\n<p>@param [String] backtrace the backtrace …\n"],["snippet_for","RSpec::Core::Formatters::SnippetExtractor","RSpec/Core/Formatters/SnippetExtractor.html#method-i-snippet_for","(error_line)","<p>@api private\n<p>Create a snippet from a line of code.\n<p>@param [String] error_line file name with line number …\n"],["spec_opts=","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-spec_opts-3D","(opts)","<p>@deprecated Use rspec_opts instead.\n<p>Command line options to pass to rspec.\n<p>default:\n"],["start","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-start","(example_count)","<p>@api public\n<p>This method is invoked before any examples are run, right after they have\nall been collected. …\n"],["start","RSpec::Core::Formatters::DeprecationFormatter","RSpec/Core/Formatters/DeprecationFormatter.html#method-i-start","(example_count=nil)",""],["start","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-start","(example_count)",""],["start","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-start","(expected_example_count)",""],["start_dump","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-start_dump","()","<p>@api public\n<p>This method is invoked after all of the examples have executed. The next\nmethod to be invoked …\n"],["start_dump","RSpec::Core::Formatters::HtmlFormatter","RSpec/Core/Formatters/HtmlFormatter.html#method-i-start_dump","()",""],["start_dump","RSpec::Core::Formatters::ProgressFormatter","RSpec/Core/Formatters/ProgressFormatter.html#method-i-start_dump","()",""],["start_sync_output","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-start_sync_output","()",""],["stop","RSpec::Core::Formatters::BaseFormatter","RSpec/Core/Formatters/BaseFormatter.html#method-i-stop","()","<p>@api public\n<p>Invoked after all examples have executed, before dumping post-run reports.\n<p>@return [nil]\n"],["stop","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-i-stop","()",""],["stop","RSpec::Core::Reporter","RSpec/Core/Reporter.html#method-i-stop","()",""],["store_before_all_ivars","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-store_before_all_ivars","(example_group_instance)","<p>@private\n"],["strip_trailing_zeroes","RSpec::Core::Formatters::Helpers","RSpec/Core/Formatters/Helpers.html#method-i-strip_trailing_zeroes","(string)","<p>@api private\n<p>Remove trailing zeros from a string.\n<p>@param [String] string string with trailing zeros @return …\n"],["subclass","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-subclass","(parent, args, &example_group_block)","<p>@private\n"],["subject","RSpec::Core::MemoizedHelpers","RSpec/Core/MemoizedHelpers.html#method-i-subject","()","<p>@note `subject` was contributed by Joe Ferris to support the one-liner\n\n<pre>syntax embraced by shoulda matchers: ...</pre>\n"],["subject","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-subject","(name=nil, &block)","<p>Declares a `subject` for an example group which can then be the implicit\nreceiver (through delegation) …\n"],["subject!","RSpec::Core::MemoizedHelpers::ClassMethods","RSpec/Core/MemoizedHelpers/ClassMethods.html#method-i-subject-21","(name=nil, &block)","<p>Just like `subject`, except the block is invoked by an implicit `before`\nhook. This serves a dual purpose …\n"],["success_color","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-success_color","(text)",""],["summary_line","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-summary_line","(example_count, failure_count, pending_count)","<p>@api public\n<p>Outputs summary with number of examples, failures and pending.\n"],["summary_line","RSpec::Core::Formatters::JsonFormatter","RSpec/Core/Formatters/JsonFormatter.html#method-i-summary_line","(example_count, failure_count, pending_count)",""],["superclass_metadata","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-superclass_metadata","()","<p>@private @return [Metadata] belonging to the parent of a nested\n{ExampleGroup}\n"],["teardown_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","RSpec/Core/MockFrameworkAdapter.html#method-i-teardown_mocks_for_rspec","()",""],["top_level?","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-top_level-3F","()","<p>@private\n"],["top_level_description","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-top_level_description","()","<p>@private\n"],["trap_interrupt","RSpec::Core::Runner","RSpec/Core/Runner.html#method-c-trap_interrupt","()",""],["verify_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","RSpec/Core/MockFrameworkAdapter.html#method-i-verify_mocks_for_rspec","()",""],["wants_to_quit","RSpec","RSpec.html#method-c-wants_to_quit","()","<p>@private\n"],["wants_to_quit=","RSpec","RSpec.html#method-c-wants_to_quit-3D","(maybe)","<p>@private Used internally to determine what to do when a SIGINT is received\n"],["warn_deprecation","RSpec::Core::Deprecation","RSpec/Core/Deprecation.html#method-i-warn_deprecation","(message)","<p>@private\n<p>Used internally to print deprecation warnings\n"],["warning=","RSpec::Core::RakeTask","RSpec/Core/RakeTask.html#method-i-warning-3D","(true_or_false)","<p>@deprecated Use ruby_opts=“-w” instead.\n<p>When true, requests that the specs be run with the warning …\n"],["warnings","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-warnings","()",""],["warnings=","RSpec::Core::Configuration","RSpec/Core/Configuration.html#method-i-warnings-3D","(value)","<p>Set Ruby warnings on or off\n"],["white","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-white","(text)",""],["windows_os?","RSpec","RSpec.html#method-c-windows_os-3F","()","<p>@private\n"],["with","RSpec::Core::Example::Procsy","RSpec/Core/Example/Procsy.html#method-i-with","(metadata)","<p>@api private\n"],["with","RSpec::Core::Hooks::AroundHookCollection","RSpec/Core/Hooks/AroundHookCollection.html#method-i-with","(example, initial_procsy)",""],["with","RSpec::Core::Hooks::HookCollection","RSpec/Core/Hooks/HookCollection.html#method-i-with","(example)",""],["world","RSpec","RSpec.html#method-c-world","()","<p>@private Internal container for global non-configuration data\n"],["world","RSpec::Core::ExampleGroup","RSpec/Core/ExampleGroup.html#method-c-world","()","<p>@private\n"],["world=","RSpec","RSpec.html#method-c-world-3D","(new_world)","<p>@private Used internally to set the global object\n"],["yellow","RSpec::Core::Formatters::BaseTextFormatter","RSpec/Core/Formatters/BaseTextFormatter.html#method-i-yellow","(text)",""]]}}