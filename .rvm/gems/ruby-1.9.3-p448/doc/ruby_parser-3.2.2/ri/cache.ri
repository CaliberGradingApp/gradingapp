{:ancestors{I"Ruby19Parser:EF[I"Racc::Parser;FI"Ruby20Parser;F[I"Racc::Parser;FI"RubyLexer;F[I"Object;FI"Ruby18Parser;F[I"Racc::Parser;FI"RubyParserGauntlet;F[I"Gauntlet;FI"Regexp;F[I"Object;FI"Fixnum;F[I"Object;FI"RPStringScanner;F[I"StringScanner;FI"RubyParserStuff::Keyword;F[I"Object;FI"&RubyParserStuff::Keyword::KWtable;F[I"Object;FI"!RubyParserStuff::Environment;F[I"Object;FI" RubyParserStuff::StackState;F[I"Object;FI""RubyParserStuff::Ruby20Parser;F[I"Racc::Parser;FI"RubyParserStuff;FI""RubyParserStuff::Ruby19Parser;F[I"Racc::Parser;F@.I""RubyParserStuff::Ruby18Parser;F[I"Racc::Parser;F@.I" RubyParserStuff::RubyParser;F[I"Object;FI"-RubyParserStuff::RubyParser::SyntaxError;F[I"RuntimeError;FI"RubyParserStuff::String;F[I"Object;FI"RubyParserStuff::Sexp;F[I"Object;F:attributes{I"RubyLexer;F[I"attr_accessor brace_nest;FI"attr_accessor lex_strterm;FI"attr_accessor lpar_beg;FI"attr_accessor paren_nest;FI"attr_accessor parser;FI"attr_accessor space_seen;FI" attr_accessor string_buffer;FI"attr_accessor token;FI"attr_accessor version;FI"attr_accessor warnings;FI"attr_accessor yacc_value;FI"attr_reader lex_state;FI"attr_reader src;FI"attr_writer lineno;F@"[	I"attr_accessor id0;FI"attr_accessor id1;FI"attr_accessor name;FI"attr_accessor state;F@%[I"attr_reader dyn;FI"attr_reader env;F@([I"attr_accessor debug;FI"attr_reader name;FI"attr_reader stack;F@>[I"attr_writer paren;FI"RubyParserStuff;F[I"*attr_accessor canonicalize_conditions;FI"attr_accessor file;FI"attr_accessor in_def;FI"attr_accessor in_single;FI"attr_accessor lexer;FI"attr_reader comments;FI"attr_reader env;F:class_methods{I"RubyLexer;F[I"new;F@[I"new;F@[I"keyword18;FI"keyword19;F@"[I"new;F@%[I"new;F@([I"new;F@5[I"for_current_ruby;FI"new;F@`[I"new;F:encodingIu:Encoding
UTF-8;F:instance_methods{I"RubyLexer;F[5I"advance;FI"arg_ambiguous;FI"brace_nest;FI"comments;FI"expr_beg_push;FI"fix_arg_lex_state;FI"heredoc;FI"heredoc_identifier;FI"in_lex_state?;FI"int_with_base;FI"is_arg?;FI"is_beg?;FI"is_end?;FI"is_label_possible?;FI"is_space_arg?;FI"lex_state;FI"lex_state=;FI"lex_strterm;FI"lineno;FI"lpar_beg;FI"paren_nest;FI"parse_number;FI"parse_quote;FI"parse_string;FI"parser;FI"process_token;FI"rb_compile_error;FI"read_escape;FI"regx_options;FI"
reset;FI"ruby18;FI"ruby19;FI"space_seen;FI"src;FI"	src=;FI"string_buffer;FI"tokadd_escape;FI"tokadd_string;FI"
token;FI"unescape;FI"version;FI"warning;FI"warnings;FI"yacc_value;FI"
yylex;FI"yylex_paren18;FI"yylex_paren19;FI"yylex_string;F@[
I"
broke;FI"diff_pp;FI"process;FI"run;FI"should_skip?;F@[I"charpos;FI"current_line;FI"d;FI"extra_lines_added;FI"extra_lines_added=;FI"
getch;FI"lineno;FI"old_getch;FI"old_scan;FI"	scan;FI"string_to_pos;FI"unread_many;F@"[	I"id0;FI"id1;FI"	name;FI"
state;F@%[I"[];FI"[]=;FI"all;FI"current;FI"dyn;FI"dynamic;FI"dynamic?;FI"env;FI"extend;FI"
reset;FI"unextend;FI"use;FI"
used?;F@([I"
debug;FI"inspect;FI"is_in_state;FI"lexpop;FI"	name;FI"pop;FI"	push;FI"
stack;F@5[I"
parse;FI"process;FI"
reset;F@;[I"	grep;F@>[I"add;FI"add_all;FI"block_pass?;FI"
paren;FI"to_sym;FI"
value;F@`[KI"arg_add;FI"arg_blk_pass;FI"arg_concat;FI"	argl;FI"	args;FI"array_to_hash;FI"aryset;FI"assignable;FI"backref_assign_error;FI"block_append;FI"block_dup_check;FI"block_var;FI"block_var18;FI"call_args;FI"canonicalize_conditions;FI"clean_mlhs;FI"comments;FI"	cond;FI"debug20;FI"do_parse;FI"env;FI"	file;FI"get_match_node;FI"gettable;FI"hack_encoding;FI"handle_encoding;FI"in_def;FI"in_single;FI"
lexer;FI"list_append;FI"list_prepend;FI"literal_concat;FI"
logop;FI"new_aref;FI"new_body;FI"new_call;FI"new_case;FI"new_class;FI"new_compstmt;FI"new_defn;FI"new_defs;FI"new_for;FI"new_if;FI"new_iter;FI"new_masgn;FI"new_module;FI"new_op_asgn;FI"new_regexp;FI"new_resbody;FI"new_sclass;FI"new_super;FI"new_undef;FI"new_until;FI"new_until_or_while;FI"new_when;FI"new_while;FI"new_xstring;FI"new_yield;FI"next_token;FI"node_assign;FI"on_error;FI"process;FI"remove_begin;FI"
reset;FI"ret_args;FI"s;FI"syntax_error;FI"value_expr;FI"void_stmts;FI"warning;F:modules[I"Fixnum;FI"RPStringScanner;FI"Regexp;FI"Ruby18Parser;FI"Ruby19Parser;FI"Ruby20Parser;FI"RubyLexer;FI"RubyParserGauntlet;F@.I"!RubyParserStuff::Environment;FI"RubyParserStuff::Keyword;FI"&RubyParserStuff::Keyword::KWtable;FI""RubyParserStuff::Ruby18Parser;FI""RubyParserStuff::Ruby19Parser;FI""RubyParserStuff::Ruby20Parser;FI" RubyParserStuff::RubyParser;FI"-RubyParserStuff::RubyParser::SyntaxError;FI"RubyParserStuff::Sexp;FI" RubyParserStuff::StackState;FI"RubyParserStuff::String;F