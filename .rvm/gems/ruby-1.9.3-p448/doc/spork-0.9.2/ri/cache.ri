{:ancestors{I"Spork::Forker:EF[I"Object;FI"%Spork::Forker::ForkDiedException;F[I"Exception;FI"Spork::TestFramework;F[I"Object;FI"#Spork::TestFramework::Cucumber;F[I"Spork::TestFramework;FI" Spork::TestFramework::RSpec;F[@I"Spork::Diagnoser;F[I"Object;FI"Spork::RunStrategy;F[I"Object;FI"+Spork::TestFramework::FactoryException;F[I"Exception;FI"0Spork::TestFramework::NoFrameworksAvailable;F[I"+Spork::TestFramework::FactoryException;FI"0Spork::TestFramework::FrameworkNotAvailable;F[@ I"-Spork::TestFramework::NoFrameworkMatched;F[@ I"Spork::AppFramework;F[I"Object;FI"!Spork::AppFramework::Padrino;F[I"Spork::AppFramework;FI"Spork::AppFramework::Rails;F[@*I"!Spork::AppFramework::Unknown;F[@*I"Spork::Server;F[I"Object;FI"Spork::CustomIOStreams;FI"Spork::Runner;F[I"Object;FI" Spork::RunStrategy::Forking;F[I"Spork::RunStrategy;FI"MagazineSlave;F[I"DRb::DRbUndumped;FI"Object;FI"!Spork::RunStrategy::Magazine;F[@8I"Spork::GemHelpers::GemPath;F[I"Comparable;FI"Object;FI"SporkDebugger;F[I"Object;FI" SporkDebugger::PreloadState;F[I"Object;FI""SporkDebugger::NetworkHelpers;FI" SporkDebugger::EachRunState;F[I"Object;F@I:attributes{@[I"attr_reader stderr;FI"attr_reader stdout;F@[I" attr_accessor mother_object;F@[I"attr_reader test_framework;F@/[I"attr_accessor port;FI"attr_reader run_strategy;F@3[I"attr_reader test_framework;F@9[I"attr_reader id_num;F@?[	I"attr_reader name;FI"attr_reader path;FI"attr_reader version;FI" attr_reader version_numbers;F@C[I"attr_reader instance;FI"attr_reader state;F:class_methods{@[I"new;F@[I"available?;FI"available_test_frameworks;FI"default_port;FI"factory;FI"helper_file;FI"inherited;FI"load_preference_index;FI"new;FI"short_name;FI"supported_test_frameworks;F@[I"mother_object;F@[I"add_included_file;FI"install_hook!;FI"	load;FI"loaded_files;FI"output_results;FI"remove_hook!;FI"require;F@[I"factory;FI"inherited;FI"new;F@![I"new;F@#[I"new;F@%[I"[];FI"detect_framework;FI"detect_framework_name;FI"instances;FI"setup_autoload;FI"short_name;F@/[I"new;FI"run;F@3[I"new;FI"run;F@6[I"available?;F@9[I"new;F@=[I"available?;FI"new;F@?[I"new;F@C[I"instance;FI"new;FI"run;F@F[I"new;F@J[I"new;FI"
Spork;F[I"after_each_run;FI"detect_and_require;FI"each_run;FI"exec_after_each_run;FI"exec_each_run;FI"exec_prefork;FI"other_spork_gem_load_paths;FI"prefork;FI"
state;FI"trap_class_method;FI"trap_method;FI"using_spork?;FI"Spork::CustomIOStreams;F[I"included;F:encodingIu:Encoding
UTF-8;F:instance_methods{@[I"
abort;FI"result;FI"running?;F@[I"bootstrap;FI"bootstrapped?;FI"default_port;FI"entry_point;FI"framework;FI"helper_file;FI"preload;FI"run_tests;FI"short_name;FI"stderr;FI"stdout;F@[I"preload;FI"run_tests;F@[I"rspec1?;FI"run_tests;F@[I"
abort;FI"assert_ready!;FI"cleanup;FI"preload;FI"run;FI"running?;FI"test_framework;F@[I"message;F@![I"message;F@#[I"message;F@%[	I"bootstrap_required?;FI"entry_point;FI"preload;FI"short_name;F@([	I"boot_contents;FI"boot_file;FI"entry_point;FI"preload;F@+[I"application_file;FI"boot_file;FI"deprecated_version;FI"eager_load!;FI"entry_point;FI"environment_contents;FI"environment_file;FI"helper;FI"preload;FI"preload_rails;FI"vendor;F@-[I"entry_point;F@/[
I"
abort;FI"listen;FI"	port;FI"run;FI"run_strategy;F@3[	I"find_test_framework;FI"run;FI"#supported_test_frameworks_text;FI"test_framework;F@6[
I"
abort;FI"assert_ready!;FI"preload;FI"run;FI"running?;F@9[I"id_num;FI"preload;FI"run;F@=[I"
abort;FI"assert_ready!;FI"fill_slave_pool;FI"kill_all_processes;FI"kill_slave;FI"preload;FI"restart_slave;FI"run;FI"running?;FI"slave_count;FI"slave_max;FI"spawn_process;FI"start_Rinda_ringserver;FI"start_slave;FI"windows?;F@?[
I"<=>;FI"	name;FI"	path;FI"version;FI"version_numbers;F@C[I"
state;F@F[I"connect_rdebug_client;FI"debugger;FI"finish;FI"install_hook;FI""listen_for_connection_signals;FI"main_loop;FI"!transition_to_each_run_state;F@J[	I"prepare_debugger;FI"4signal_spork_server_to_connect_to_rdebug_server;FI"start_rdebug_server;FI"wait_for_connection;F@«[I"stderr;FI"stdout;FI")Spork::CustomIOStreams::ClassMethods;F[I"stderr;FI"stdout;FI"Spork::GemHelpers;F[I"latest_load_paths;FI""SporkDebugger::NetworkHelpers;F[I"find_port;F:modules["I"MagazineSlave;FI"
Spork;F@*I"!Spork::AppFramework::Padrino;FI"Spork::AppFramework::Rails;FI"!Spork::AppFramework::Unknown;F@2I")Spork::CustomIOStreams::ClassMethods;FI"Spork::Diagnoser;FI"Spork::Forker;FI"%Spork::Forker::ForkDiedException;FI"Spork::GemHelpers;FI"Spork::GemHelpers::GemPath;F@8I" Spork::RunStrategy::Forking;FI"!Spork::RunStrategy::Magazine;FI"Spork::Runner;FI"Spork::Server;F@I"#Spork::TestFramework::Cucumber;F@ I"0Spork::TestFramework::FrameworkNotAvailable;FI"-Spork::TestFramework::NoFrameworkMatched;FI"0Spork::TestFramework::NoFrameworksAvailable;FI" Spork::TestFramework::RSpec;FI"SporkDebugger;FI" SporkDebugger::EachRunState;F@II" SporkDebugger::PreloadState;F